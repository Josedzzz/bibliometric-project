@inproceedings{10.1145/3328778.3367003,
author = {Soh, Leen-Kiat and Peteranetz, Markeya S. and Glebova, Olga},
title = {Adopting, Integrating, and Evaluating Computational Creativity Exercises and an Experience Report},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3367003},
doi = {10.1145/3328778.3367003},
abstract = {In this workshop, participants will learn how to integrate into their classes computational thinking and creative thinking activities that have been shown via rigorous research to significantly improve student learning and performance. Specifically, participants will be familiarized with the suite of Computational Creativity Exercises (non-programming-based, group-based, active learning exercises), take part in completing one of the exercises, learn how to integrate and adapt them into their courses, and be exposed to the educational research studies behind the development, design, and administration of these exercises. Participants will also learn how to conduct evidence-based, educational research studies. Workshop sessions will include presentations, an experience report, breakout group discussions, and hands-on activities. More information can be found at cse.unl.edu/agents/ic2think/CCEWorkshop},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {1392},
numpages = {1},
keywords = {exercises, creative thinking, computational thinking},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3386392.3399326,
author = {Delzanno, Giorgio and Guerrini, Giovanna and Perotto, Simone and Traverso, Flavio and Mammoliti, Sofia and Staglian\`{o}, Susanna},
title = {Codinji: Welcome to the Coding Jungle!},
year = {2020},
isbn = {9781450379502},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3386392.3399326},
doi = {10.1145/3386392.3399326},
abstract = {In this paper we discuss design principles, educational goals, implementation issues and practical results of the Codinj laboratory organized at the Genova Science Festival to promote computational thinking to a broad audience via a novel combination of the Pocket Code App and the Scratch 3.0 tool. Inspired by the original Jumanji movie, the entire activity is based on the idea of using coding to help participants in being part, conceptually and physically, of a video game. From an educational perspective, the proposed exercises are aimed at introducing, with a clear goal in mind, basic computational thinking concepts such as the notion of state, instructions, executions, events and concurrency.},
booktitle = {Adjunct Publication of the 28th ACM Conference on User Modeling, Adaptation and Personalization},
pages = {151–154},
numpages = {4},
keywords = {personalization, computer science education, adaptation},
location = {Genoa, Italy},
series = {UMAP '20 Adjunct}
}

@inproceedings{10.1145/3372782.3406268,
author = {Gendreau Chakarov, Alexandra and Biddy, Quentin and Jacobs, Jennifer and Recker, Mimi and Sumner, Tamara},
title = {Opening the Black Box: Investigating Student Understanding of Data Displays Using Programmable Sensor Technology},
year = {2020},
isbn = {9781450370929},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3372782.3406268},
doi = {10.1145/3372782.3406268},
abstract = {This paper describes the design and classroom implementation of a week-long unit that aims to integrate computational thinking (CT) into middle school science classes using programmable sensor technology. The goals of this sensor immersion unit are to help students understand why and how to use sensor and visualization technology as a powerful data-driven tool for scientific inquiry in ways that align with modern scientific practice. The sensor immersion unit is anchored in the investigation of classroom data where students engage with the sensor technology to ask questions about and design displays of the collected data. Students first generate questions about how data data displays work and then proceed through a set of programming exercises to help them understand how to collect and display data collected from their classrooms by building their own mini data displays. Throughout the unit students draw and update their hand drawn models representing their current understanding of how the data displays work. The sensor immersion unit was implemented by ten middle school science teachers during the 2019/2020 school year. Student drawn models of the classroom data displays from four of these teachers were analyzed to examine students' understandings in four areas: function of sensor components, process models of data flow, design of data displays, and control of the display. Students showed the best understanding when describing sensor components. Students exhibited greater confusion when describing the process of how data streams moved through displays and how programming controlled the data displays.},
booktitle = {Proceedings of the 2020 ACM Conference on International Computing Education Research},
pages = {291–301},
numpages = {11},
keywords = {sensors, middle school science, micro:bit, computational thinking},
location = {Virtual Event, New Zealand},
series = {ICER '20}
}

@inproceedings{10.1145/2839509.2844656,
author = {Horn, Britton and Clark, Christopher and Strom, Oskar and Chao, Hilery and Stahl, Amy J. and Harteveld, Casper and Smith, Gillian},
title = {Design Insights into the Creation and Evaluation of a Computer Science Educational Game},
year = {2016},
isbn = {9781450336857},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2839509.2844656},
doi = {10.1145/2839509.2844656},
abstract = {Computer Science (CS) education at the middle school level using educational games has seen recent growth and shown promising results. Typically these games teach the craft of programming and not the perspectives required for computational thinking, such as abstraction and algorithm design, characteristic of a CS curriculum. This research presents a game designed to teach computational thinking via the problem of minimum spanning trees to middle school students, a set of evaluation instruments, and the results of an experimental pilot study. Results show a moderate increase in minimum spanning tree performance; however, differences between gender, collaboration method, and game genre preference are apparent. Based on these results, we discuss design considerations for future CS educational games focused on computational thinking.},
booktitle = {Proceedings of the 47th ACM Technical Symposium on Computing Science Education},
pages = {576–581},
numpages = {6},
keywords = {game design, educational games, computational thinking},
location = {Memphis, Tennessee, USA},
series = {SIGCSE '16}
}

@article{10.5555/3205191.3205223,
author = {Jin, Karen H.},
title = {Students' understanding of basic computational concepts in an introduction to mobile development course},
year = {2018},
issue_date = {June 2018},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {33},
number = {6},
issn = {1937-4771},
abstract = {Building basic computational thinking skills is an important goal in courses that introduce computing to students with limited programming background. Among choices of tools and platforms, MIT App Inventor is a popular mobile app development environment particularly suitable for engaging novice learners. Users are able to create their own mobile apps with real-world usefulness without having to deal with difficult language syntax. However, a study of computational thinking assessment showed students had difficulties in learning abstract concepts such as procedure and flow control using App Inventor [1]. Meanwhile, non-CS major students demonstrated a lack of continuous growth in computational thinking skills compared to CS major students [1]. In another recent study [2], students reported increased interests in computing after being exposed to modern responsive web development, but it is unclear if having an HTML/CSS background makes it more effective in learning abstract computational concepts when using App Inventor.},
journal = {J. Comput. Sci. Coll.},
month = jun,
pages = {183–185},
numpages = {3}
}

@inproceedings{10.1145/3545945.3569736,
author = {Friend, Michelle and Swift, Andrew W. and Love, Betty and Winter, Victor},
title = {A Wolf in Lamb's Clothing: Computer Science in a Mathematics Course},
year = {2023},
isbn = {9781450394314},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545945.3569736},
doi = {10.1145/3545945.3569736},
abstract = {If computer science programs face a challenge of convincing students that programming is fun and achievable, they have nothing on mathematics departments who face societal beliefs that math is hard and scary. Several movements in computer science education have focused on broadening participation within computer science and across disciplines. The "CS + X" efforts have focused on helping computer science integrate into other disciplines. The "CS For All" movement has highlighted the importance of providing high quality computing education for all students. Simultaneously, there is increasing attention to the need to provide general education alternatives to college algebra. This paper describes a course designed to combine these goals: a course that uses programming to introduce students to functions, patterns, and spatial and computational thinking in order to meet quantitative reasoning goals set by the university. The course initially used Bricklayer as the programming environment, then transitioned to Processing. Students were successful in writing programs that created art, demonstrated mastery of quantitative literacy, and had improved attitudes following the course. This project suggests that in addition to the creation of introductory computer science classes, courses which embed computer science into disciplinary requirements can be a successful pathway to expand opportunities for students to learn computing.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 1},
pages = {256–262},
numpages = {7},
keywords = {cs+x, interdisciplinary, mathematics},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3421590.3421619,
author = {Benvenuti, Martina and Chioccariello, Augusto},
title = {Programming an educational robot with 5-6 year-old children},
year = {2020},
isbn = {9781450387590},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3421590.3421619},
doi = {10.1145/3421590.3421619},
abstract = {Computational Thinking is currently being introduced into formal education in many European countries. This has stimulated research on how to introduce computational thinking and programming in primary school and in early childhood education. This study describes a work in progress that aims to verify the potential of a programmable educational robot, Cubetto, for 5-6 year-old children in enhancing their classroom activities. The study was carried out in two Italian kindergartens (42 children) and one primary school (21 children). Preliminary results show that the efficacy of Cubetto is strongly dependent on the context of use during classroom activities. The degree of children's attention (in terms of duration) depends on the teacher's ability in involving and supporting children during tasks performed with Cubetto.},
booktitle = {Proceedings of the 15th Workshop on Primary and Secondary Computing Education},
articleno = {31},
numpages = {2},
keywords = {educational robot, kindergarten, primary school, programming},
location = {Virtual Event, Germany},
series = {WiPSCE '20}
}

@inproceedings{10.1145/3328778.3366878,
author = {Yett, Bernard and Hutchins, Nicole and Stein, Gordon and Zare, Hamid and Snyder, Caitlin and Biswas, Gautam and Metelko, Mary and L\'{e}deczi, \'{A}kos},
title = {A Hands-On Cybersecurity Curriculum Using a Robotics Platform},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366878},
doi = {10.1145/3328778.3366878},
abstract = {This paper presents a study using a robotics platform for teaching computing and cybersecurity concepts to high school students. 38 students attended a week-long camp, starting with projects such as a simulation-only game and a simple autonomous driving program for the robots in order to learn and apply computational thinking (CT) and networking skills. They were then assigned a series of challenges that required developing progressively more advanced cybersecurity measures to protect their robots. This culminated in a final challenge that required implementing defensive measures such as encryption, secure key exchange and sequence numbers. We used an evidence-centered design framework to construct rubrics for grading student work. The pre- and post-test results show that the interventions helped students learn cybersecurity and CT concepts, but they had difficulties with networking concepts. These results correlate with scores from the game and the final challenge. Overall, surveys show that the competition-based robotics learning framework engaged students and supported their overall learning, but our intervention needs to be modified to help students learn networking concepts},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {1040–1046},
numpages = {7},
keywords = {robotics, networking, cybersecurity, computer science education, computational thinking, block-based programming},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3372782.3406257,
author = {Franklin, Diana and Salac, Jean and Crenshaw, Zachary and Turimella, Saranya and Klain, Zipporah and Anaya, Marco and Thomas, Cathy},
title = {Exploring Student Behavior Using the TIPP&amp;SEE Learning Strategy},
year = {2020},
isbn = {9781450370929},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3372782.3406257},
doi = {10.1145/3372782.3406257},
abstract = {With the rise of Computational Thinking (CT) instruction at the elementary level, it is imperative for elementary computing instruction to support a variety of learners. TIPP&amp;SEE is a meta-cognitive learning strategy that scaffolds student learning when learning from example code. Results from a previous study show statistically-significant performance differences favoring students using the TIPP&amp;SEE strategy on a written assessment. In this work, our goal is gain insight as to it why such dramatic learning differences may have occurred. We analyze the students' computational artifacts and TIPP&amp;SEE worksheets. Artifact analysis reveals that students in the TIPP&amp;SEE group are more thorough in their work, completing more elements of the required tasks. In addition, they build open-ended projects with longer scripts that utilize more learned blocks. Worksheet analysis shows that students were highly accurate on some types of questions but largely skipped others. Despite these positive behaviors, there was little statistical correlation between student worksheet correctness, project completion, and written assessment performance. Therefore, while students in the TIPP&amp;SEE group performed actions we believe lead to more success, no individual actions directly explain the results. Like other meta-cognitive strategies, the value of TIPP&amp;SEE may lie in cognitive processes not directly observable, and may vary based upon individual student differences.},
booktitle = {Proceedings of the 2020 ACM Conference on International Computing Education Research},
pages = {91–101},
numpages = {11},
keywords = {computational thinking, elementary education, learning strategy, scratch},
location = {Virtual Event, New Zealand},
series = {ICER '20}
}

@inproceedings{10.1145/3328778.3366822,
author = {Salac, Jean and Thomas, Cathy and Twarek, Bryan and Marsland, William and Franklin, Diana},
title = {Comprehending Code: Understanding the Relationship between Reading and Math Proficiency, and 4th-Grade CS Learning Outcomes},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366822},
doi = {10.1145/3328778.3366822},
abstract = {As many school districts nationwide continue to incorporate Computer Science (CS) and Computational Thinking (CT) instruction at the K-8 level, it is crucial that we understand the factors and skills, such as reading and math proficiency, that contribute to the success of younger learners in a computing curriculum and are typically developed at this age. Yet, little is known about the relationship between reading and math proficiency, and the learning of key CS concepts at the elementary level. This study focused on 4th-grade students (ages 9-10) who were taught events, sequence, and repetition through an adaptation of the Creative Computing Curriculum. While all students benefited from access to such a curriculum, there were statistically-significant differences in learning outcomes, especially between students whose reading and math proficiency are below grade-level, and students whose proficiency are at or above grade-level. This performance gap suggests the need for curricular improvement and learning strategies that are CS specific for students who struggle with reading and math.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {268–274},
numpages = {7},
keywords = {reading comprehension, math proficiency, k-8 education, computational thinking},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3531073.3531180,
author = {Capecchi, Sara and Gena, Cristina and Lombardi, Ilaria},
title = {Visual and unplugged coding with smart toys},
year = {2022},
isbn = {9781450397193},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3531073.3531180},
doi = {10.1145/3531073.3531180},
abstract = {Our Computer science k-12 education research group the educational toy company Quercetti have been collaborating together to design and manufacture toys that help stimulate and consolidate so-called computational thinking. This approach has been inspired by methods already consolidated in the literature and widespread worldwide such as the Bebras tasks and CS-Unplugged. This paper describes two of these smart toys, their design process, some evaluation’s results, and finally feedback and reviews from buyers. The main activities proposed by these toys leverage visual coding through small colored physical items (e.g., pegs and balls) to deliver the unplugged activities to young users.},
booktitle = {Proceedings of the 2022 International Conference on Advanced Visual Interfaces},
articleno = {26},
numpages = {5},
keywords = {CS education, CS unplugged, visual coding},
location = {Frascati, Rome, Italy},
series = {AVI '22}
}

@inproceedings{10.1145/3421590.3421599,
author = {Chioccariello, Augusto and Bottino, Rosa and Panesi, Sabrina and Freina, Laura},
title = {Longitudinal approach for introducing programming in italian primary school},
year = {2020},
isbn = {9781450387590},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3421590.3421599},
doi = {10.1145/3421590.3421599},
abstract = {Computational Thinking (CT) and related concepts, as programming and algorithmic thinking, have been recently advocated as abilities that are as fundamental as numeracy and literacy, and many countries all over the world are introducing programming activities in education. In Italy, even if the introduction of CT and programming in schools is on the pipeline of policy makers, they have not yet been included in the curriculum guidelines. Consequently, there is a strong case for analyzing how programming can be integrated at early stages into the Italian compulsory education. Starting from the constructivist tradition, a study spanning over several school years has been organized aiming at defining and testing a programming learning path for primary schools. The learning path takes into account children's interests, stimulating their passions and creativity. Students are engaged on projects that are meaningful for them, while teachers take advantage of the situations that spontaneously arise to guide students' attention on specific computational concepts. The learning path is being iteratively refined through a field experiment involving a primary school over a four year period. The study aims to the following questions:• Under which conditions can age-appropriate programming activities, allowing for individual differences in learning styles and approaches, work in primary school?• Which indications can the work performed provide to the sustainability of the programming activities when the researchers' support will come to an end?• Which elements of the study can provide suggestions for a wider introduction of programming in primary schools?Since the study is currently in its third year, this paper addresses the first two research question, while only some initial considerations are provided for the third one.},
booktitle = {Proceedings of the 15th Workshop on Primary and Secondary Computing Education},
articleno = {11},
numpages = {6},
keywords = {computational thinking, primary education, programming},
location = {Virtual Event, Germany},
series = {WiPSCE '20}
}

@inproceedings{10.1145/3290607.3312871,
author = {Rose, Simon P. and Habgood, M.P. Jacob and Jay, Tim},
title = {Using Pirate Plunder to Develop Children's Abstraction Skills in Scratch},
year = {2019},
isbn = {9781450359719},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3290607.3312871},
doi = {10.1145/3290607.3312871},
abstract = {Scratch users often struggle to detect and correct 'code smells' (bad programming practices) such as duplicated blocks and large scripts, which can make programs difficult to understand and debug. These 'smells' can be caused by a lack of abstraction, a skill that plays a key role in computer science and computational thinking. We created Pirate Plunder, a novel educational block-based programming game, that aims to teach children to reduce smells by reusing code in Scratch. This work describes an experimental study designed to measure the efficacy of Pirate Plunder with children aged 10 and 11. The findings were that children who played the game were then able to use custom blocks (procedures) to reuse code in Scratch, compared to non-programming and programming control groups.},
booktitle = {Extended Abstracts of the 2019 CHI Conference on Human Factors in Computing Systems},
pages = {1–6},
numpages = {6},
keywords = {visual programming, scratch, pirate plunder, computer science education, computational thinking, abstraction},
location = {Glasgow, Scotland Uk},
series = {CHI EA '19}
}

@inproceedings{10.1145/3582515.3609570,
author = {Bakala, Ewelina and Pires, Ana Cristina and Tejera, Gonzalo and Hourcade, Juan Pablo},
title = {“It will surely fall”: Exploring Teachers’ Perspectives on Commercial Robots for Preschoolers},
year = {2023},
isbn = {9798400701160},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3582515.3609570},
doi = {10.1145/3582515.3609570},
abstract = {This paper presents a study with kindergarten teachers to assess the advantages, challenges and opportunities of commercial robots to teach computational thinking to young children. Recent studies have highlighted the potential benefits of introducing CT concepts at an early stage. Robots are an engaging and effective educational tool for teaching CT to young children, providing hands-on and interactive learning experiences. Entirely tangible robotic environments have successfully connected the abstract world of CT with the concrete world of preschoolers. Children can program robots by pressing buttons, drawing the path or using code cards. However, there is limited research on the use of commercial robots in preschool classrooms. This research aims to address this gap by investigating preschool teachers’ perspectives on the advantages, challenges, and opportunities associated with using commercial robots in the context of kindergarten classrooms. We contribute with a list of practical, pedagogical and motivational aspects that should be taken into account while evaluating robots and design considerations to build robotic environments for kindergarten classrooms.},
booktitle = {Proceedings of the 2023 ACM Conference on Information Technology for Social Good},
pages = {477–486},
numpages = {10},
keywords = {Educational robotics, Preschoolers, Teachers’ perspective},
location = {Lisbon, Portugal},
series = {GoodIT '23}
}

@inproceedings{10.1145/3582515.3609525,
author = {Franceschini, Andrea and Rod\`{a}, Antonio},
title = {Play to Learn: from Serious Games to just Games},
year = {2023},
isbn = {9798400701160},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3582515.3609525},
doi = {10.1145/3582515.3609525},
abstract = {Games have been used for a few decades in research, formal education, and training of children and adults, and digital games are no strangers to educational uses. After all, everyone likes to play games, so it should stand to reason that educational digital games are going to be a hit. Unfortunately, this is not the case. In fact, educational digital games are often criticized for being too focused on educational content and not enough on engaging, challenging, and entertaining players. Making games for entertainment is difficult and requires multidisciplinary expertise. Making educational games that are engaging and entertaining is also difficult and requires additional input from educators and domain experts, and rigorous evaluation methodologies, all of which must revolve around the players. In this position article, we introduce the early stage “EduGames: Play to Learn” research project aimed at supporting the public in acquiring Critical and Computational Thinking skills to tackle the problem of detecting misinformation, and supporting the game development and research communities in creating and evaluating games that are entertaining and educational. As part of this project, we call for more, and more structured, synergy between academia, educators, and the game development industry.},
booktitle = {Proceedings of the 2023 ACM Conference on Information Technology for Social Good},
pages = {117–127},
numpages = {11},
keywords = {digital games, entertainment, serious games, video games},
location = {Lisbon, Portugal},
series = {GoodIT '23}
}

@inproceedings{10.1145/3649217.3653590,
author = {Sanhueza, Felipe and Gutierrez, Francisco J. and Vasquez, Andrea},
title = {Exploring the Acceptance and Effectiveness of Parsons Problems on Scaffolding CS1 Retakers},
year = {2024},
isbn = {9798400706004},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3649217.3653590},
doi = {10.1145/3649217.3653590},
abstract = {Given the importance of the introductory programming course (CS1), the Computer Science Education community has devoted a significant effort to generate empirical evidence and propose tools, techniques, and curricular approaches to support students. For instance, Parsons Problems have emerged as one of the preferred scaffolding strategies to help CS1 students get a grasp on programming before being exposed to open write-code assignments. However, prior literature has not given enough attention to those students who fail CS1 and must retake the course. In this paper, we report the results of an exploratory case study aimed at understanding the effectiveness of Parsons Problems as an active scaffolding strategy delivered to CS1 retakers at the University of Chile. In this version of the course, although students were already introduced to computational thinking, program design, and coding (as they were taking CS1 for a second time), it was the first time they were exposed to Parsons Problems. We conducted a follow-up assessment of the students' perceptions throughout the course, employing a combination of focus groups, semi-structured interviews, and end-course surveys. Our results suggest that Parsons Problems are effective for learners beyond the ''novice programmer'' stage (such as the experience of CS1 retakers), highlighting good practices to support the studied group in terms of engagement, performance, and overall student experience.},
booktitle = {Proceedings of the 2024 on Innovation and Technology in Computer Science Education V. 1},
pages = {681–687},
numpages = {7},
keywords = {cs1, novice programmers, parsons problems, retakers},
location = {Milan, Italy},
series = {ITiCSE 2024}
}

@inproceedings{10.1145/3361721.3361732,
author = {Benvenuti, Martina and Chioccariello, Augusto and Giammoro, Giorgia},
title = {Programming to learn in Italian primary school},
year = {2019},
isbn = {9781450377041},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3361721.3361732},
doi = {10.1145/3361721.3361732},
abstract = {The Italian Ministry of Education is promoting the introduction of coding and computational thinking at compulsory school level. One of the research initiatives being taken in this regard is "Programming to Learn in Italian Primary School". The project's aim is to develop a vertical curriculum for the introduction of programming in Italian primary schools as a new expressive language for children. All the schoolchildren involved in the project attend a weekly computer lab class held throughout the school year. They work on individual projects during the first half of the year. Then, in the second half of the year, they work in small groups on a common theme that the teacher selects from those studied in class. In this poster, we report the work of a fifth-grade class (24 students -- 7 females and 17 males, aged 10-11) in the 2017-2018 school year. Findings from individual and group Scratch programs produced, self-evaluation questionnaire and semi-structured interviews with the groups are presented.},
booktitle = {Proceedings of the 14th Workshop in Primary and Secondary Computing Education},
articleno = {5},
numpages = {2},
keywords = {Programming, Primary school, Computational thinking},
location = {Glasgow, Scotland, Uk},
series = {WiPSCE '19}
}

@inproceedings{10.1145/3408877.3439665,
author = {Burke, Quinn and Iwatani, Emi and Ruiz, Pati and Tackett, Traci and Owens, Aileen},
title = {Pivoting in a Pandemic: Transitioning from In-person to Virtual K-8 Computing Professional Development},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3439665},
doi = {10.1145/3408877.3439665},
abstract = {This poster reports on year one of a three-year NSF-funded Research Practitioner Partnership (RPP) to develop a K-8 pipeline for computer science (CS) and computational thinking (CT) education within two rural school districts in Eastern Kentucky : Pikeville Independent School District and Floyd County Schools. Economically devastated by the departure of the coal industry, these communities are committed to developing high-quality computing curricula for all students, beginning in their earliest years. The poster has two components. First, through a mixture of qualitative measures, the poster reports on the genesis and development of the RPP. It focuses on the RPP's origin in leveraging the districts' existing relationship with Pennsylvania's South Fayette School District, which has developed one of the nation's leading programs for teacher professional development (PD) in K-12 computing. The second component of the poster focuses on the development of a series of summer workshops for Kentucky Appalachia K-8 instructors to learn the basics of CS and CT and how to integrate these skills and concepts into existing K-8 coursework. Of course, the RPP faced new challenges with COVID-19 most notably, the need to offer these summer workshops remotely, and adjusting the objectives and research questions accordingly. Through focus groups with the PD instructional team and survey responses from the KY teacher workshop participants, the poster will report on the pedagogical implications of offering teacher PD exclusively online and what the ramifications have been for Pikeville and Floyd County children with the return to school in the Fall of 2020.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {1273},
numpages = {1},
keywords = {rural education, research practice partnership (rpp), educational equity, computational thinking},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3641554.3701810,
author = {Borela, Rodrigo and Liding, Zhixian and McDaniel, Melinda},
title = {Enhancing CS1 Education through Experiential Learning with Robotics Projects},
year = {2025},
isbn = {9798400705311},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3641554.3701810},
doi = {10.1145/3641554.3701810},
abstract = {To address the challenges of generative AI in CS1 education, especially its misuse by students to bypass coding exercises, which undermines their engagement with foundational learning, CS1 curricula are evolving to emphasize higher-level problem-solving and systems thinking. In response, a novel experiential learning initiative grounded in High-Impact Practices was introduced to a CS1 course over the course of 2 semesters, involving 132 students. This initiative utilized robotics lab assignments to enhance computational thinking across various levels of granularity, from individual functional components to overall system behaviors, bridging conceptual understanding with real-world applications. The approach emphasized project-based learning, extended engagement time, and reflective practices to deepen students' understanding of core computing concepts and scaffold knowledge integration. The curriculum featured both individual and team-based lab assignments to build foundational skills followed by collaborative problem-solving. The initiative's impact was assessed against a control group of 427 students who completed traditional web development lab assignments. Evaluation methods included thematic analyses of student reflections, instructor opinion surveys, and statistical analysis of exam performances across the semester. Results revealed a substantial positive effect on self-efficacy and learning outcomes. Students in the experiential learning group reported increased confidence in applying their computing skills to real-world scenarios, heightened engagement, and greater improvements in technical proficiency. Notably, their exam scores demonstrated a statistically significant improvement compared to the control group. These findings highlight the effectiveness of integrating practical, interactive elements into computer science education to meet the demands of a rapidly evolving technological landscape.},
booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 1},
pages = {144–150},
numpages = {7},
keywords = {artificial intelligence, collaborative learning, cs1, experiential learning, robotics},
location = {Pittsburgh, PA, USA},
series = {SIGCSETS 2025}
}

@inproceedings{10.1145/3450741.3466635,
author = {Graves, Jordan and Royer, Karen and Smith, Gillian and Sullivan, Anne},
title = {Procedural Patchwork: Community-Focused Generative Design for Quilting},
year = {2021},
isbn = {9781450383769},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3450741.3466635},
doi = {10.1145/3450741.3466635},
abstract = {We are developing quilt design generation software for Code Crafters workshops, which aim to broaden public awareness of computational thinking and build links between computer science and quilting. The software generates quilt designs, which will be manipulated and modified by workshop participants. Due to COVID, our workshops will be conducted remotely, so the software has been designed to increase the sense of community by providing opportunities for the types of social interactions that take place in colocated quilting workshops.},
booktitle = {Proceedings of the 13th Conference on Creativity and Cognition},
articleno = {56},
numpages = {3},
keywords = {quilting, informal science learning, generative design, computer science education, computational craft, adult education, Design software},
location = {Virtual Event, Italy},
series = {C&amp;C '21}
}

@inproceedings{10.1145/3609987.3610004,
author = {Gardeli, Anna and Vosinakis, Spyros},
title = {Exploring the co-manipulation of physical and virtual objects in tangible mobile augmented reality for collaborative learning},
year = {2023},
isbn = {9798400708886},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3609987.3610004},
doi = {10.1145/3609987.3610004},
abstract = {Collaborative mobile augmented reality (MAR) has emerged as a promising tool in the field of education. This technology enables multiple users to interact with digital content overlaid on the physical world through their mobile devices. Collaborative MAR combined with tangible elements enhances learning by integrating physical objects that can be manipulated and interacted with in the augmented reality environment, providing a hands-on and immersive educational experience. This study explores the impact of tangible mobile augmented reality on collaboration and object manipulation. Our goal is to understand how mobile devices’ manipulation affects collocated students' collaboration in tangible MAR in terms of ease of use and collaboration. The study involves participants working in pairs to facilitate collaboration through a MAR game for developing the computational thinking skills of primary school students. Our goal is to compare the perceived behaviors and interactions that emerged in two distinct MAR settings: (1) Stand-mounted device condition, where the device is fixed on a mobile stand, and (2) Hand-held device condition, where the device is held by one of the team's players. The same task is simulated in both settings to allow for direct comparison. The results of this study can help inform the design and development of future MAR systems and provide insights into the potential benefits and challenges in terms of collaboration and object manipulation.},
booktitle = {Proceedings of the 2nd International Conference of the ACM Greek SIGCHI Chapter},
articleno = {17},
numpages = {8},
location = {Athens, Greece},
series = {CHIGREECE '23}
}

@inproceedings{10.1145/3626252.3630909,
author = {Denny, Paul and Leinonen, Juho and Prather, James and Luxton-Reilly, Andrew and Amarouche, Thezyrie and Becker, Brett A. and Reeves, Brent N.},
title = {Prompt Problems: A New Programming Exercise for the Generative AI Era},
year = {2024},
isbn = {9798400704239},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626252.3630909},
doi = {10.1145/3626252.3630909},
abstract = {Large language models (LLMs) are revolutionizing the field of computing education with their powerful code-generating capabilities. Traditional pedagogical practices have focused on code writing tasks, but there is now a shift in importance towards reading, comprehending and evaluating LLM-generated code. Alongside this shift, an important new skill is emerging -- the ability to solve programming tasks by constructing good prompts for code-generating models. In this work we introduce a new type of programming exercise to hone this nascent skill: 'Prompt Problems'. Prompt Problems are designed to help students learn how to write effective prompts for AI code generators. A student solves a Prompt Problem by crafting a natural language prompt which, when provided as input to an LLM, outputs code that successfully solves a specified programming task. We also present a new web-based tool called Promptly which hosts a repository of Prompt Problems and supports the automated evaluation of prompt-generated code. We deploy Promptly in one CS1 and one CS2 course and describe our experiences, which include student perceptions of this new type of activity and their interactions with the tool. We find that students are enthusiastic about Prompt Problems, and appreciate how the problems engage their computational thinking skills and expose them to new programming constructs. We discuss ideas for the future development of new variations of Prompt Problems, and the need to carefully study their integration into classroom practice.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 1},
pages = {296–302},
numpages = {7},
keywords = {ai code generation, artificial intelligence, generative ai, large language models, llms, prompt engineering, prompt problems},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@article{10.5555/3532930.3532935,
author = {Hamid, Fahmida},
title = {A functional programming course in remote learning model: an experience report},
year = {2022},
issue_date = {April 2022},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {37},
number = {6},
issn = {1937-4771},
abstract = {This experience report shares the teaching methodology of a Functional Programming course (in Haskell) offered amid the Covid-19 pandemic. In addition to highlighting problem-solving and programming from a functional perspective, the course provides a solid example of modern pedagogical elements, including team-based programming, computational thinking, presentation skills, participation and discussion skills, and a sense of accountability. This report presents the methodologies applied to achieve the objectives in a liberal arts setup and discusses the learned lessons that may help an early-career faculty model an intro-programming course.},
journal = {J. Comput. Sci. Coll.},
month = apr,
pages = {36–45},
numpages = {10}
}

@inproceedings{10.1145/3626253.3635631,
author = {Yan, Wei and Bennett, Andrew and Cobo, Alexis and Israel, Maya},
title = {A Cross-Case Analysis of Experienced Educators in CS Inclusion},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3635631},
doi = {10.1145/3626253.3635631},
abstract = {Educators should provide access to all students with inclusive and equitable computer science (CS) and computational thinking (CT) learning outcomes. Yet access to CS and CT is not always available for students with disabilities. This qualitative cross-case study examined the barriers and strengths three exemplar teachers faced, explored the supports and resources they provided, and presented how these teachers defined successful inclusive CS learning outcomes for their students. The data set included analysis of the semistructured teachers' interviews and teaching materials. The results included seven successful strategies the teachers identified: 1) using physical computing, 2) pair programming, 3)connecting CS and Individual Education Plans (IEP), 4)applying hands-on activities, 5) CT integration, 6) using CS vocabulary, and 7)open-ended pedagogy. Three resources and supports the teacher provided emerged from the data set as follows: 1) accessible instructional materials, 2) projects with multiple entry points, and 3) essential scaffolding supports. Whereas four barriers teachers faced; 1. subject matter, 2) accessible tools, 3) students receiving support, 3) the role of CS in instruction, and 4) the role of time served as additional findings. The results suggested that school-based practitioners, including administrators, can overcome the barriers and promote successful strategies that lead to asset-based CS-inclusion in the classroom.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1863–1864},
numpages = {2},
keywords = {accessibility, cs education, inclusion, special education},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3328778.3366917,
author = {Lee, Victor R. and Poole, Frederick and Clarke-Midura, Jody and Recker, Mimi and Rasmussen, Melissa},
title = {Introducing Coding through Tabletop Board Games and Their Digital Instantiations across Elementary Classrooms and School Libraries},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366917},
doi = {10.1145/3328778.3366917},
abstract = {This experience report describes an approach for helping elementary schools integrate computational thinking and coding by leveraging existing resources and infrastructure that do not rely on 1-1 computing. A particular focus is using the school library and media center as a site to complement and enhance classroom instruction on coding. Further, our approach builds upon "unplugged" knowledge and practices that are already familiar to and motivating for students, in this case tabletop board games. Through these games, students can use their prior knowledge and ease with tabletop gaming mechanics to cue relevant ideas for core computational concepts. We describe a model and an instructional unit spanning across classroom and school library settings that builds upon board game play as a source domain for computing knowledge. Building on expansive framing, the model emphasizes instructional linkages being made between one domain (the tabletop board game) and another (specially designed Scratch project shells with partially complete code blocks) such that the reasoning activities and different contexts are seen as instantiations of the same encompassing context. We present the experiences of three elementary school teachers as they implemented the unit in their classrooms and with their school librarian. We also show initial findings on the impact of the unit on student interest (N=87), as measured by pre- and post- surveys. We conclude with lessons learned about ways to improve the unit and future classroom implementations.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {787–793},
numpages = {7},
keywords = {computational thinking, cs unplugged, elementary school coding, expansive framing},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3162087.3162102,
author = {Budinsk\'{a}, Lucia and Mayerov\'{a}, Karol\'{\i}na},
title = {Graph Tasks in Bebras Contest: What does it have to do with gender?},
year = {2017},
isbn = {9781450363389},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3162087.3162102},
doi = {10.1145/3162087.3162102},
abstract = {Bebras contest has been part of Slovak informatics in schools for 10 years, making contestants familiar with information technologies, computer science concepts and improving their digital skills and computational thinking. In this article we take a look at task group which connects computer science concepts with computational thinking - graph tasks (for example trees, graphs, square grids, graph algorithms...). We focused on the three lowest categories of the Slovak contest, which include pupils of the whole primary school (aged 8 to 15) and analysed the tasks of the last four years. We used both qualitative and quantitative data analysis research methods. Task were divided into subcategories which were further analysed, focusing on identification of the specifics of the tasks in which there were significant differences between boys and girls. Using comparative analysis, it was found that boys are better in tasks with simple (relatively abstract) representation of the structure which is described by a larger amount of text, but the main point of the task is to identify the problem and create or uncover a strategy for finding a solution. Girls' performance is better in tasks that have less text, relatively more complicated representation of the structure and are focused on simple operations at graphs or reading them.},
booktitle = {Proceedings of the 6th Computer Science Education Research Conference},
pages = {83–90},
numpages = {8},
keywords = {visual literacy, graph tasks, gender differences, computational thinking, Bebras contest},
location = {Helsinki, Finland},
series = {CSERC '17}
}

@inproceedings{10.1145/3626252.3630967,
author = {Lachney, Michael and Ferguson Bey, Brian and Mouzaoir, Samuela and Robinson, Christa},
title = {Worker-Driven Computing Education},
year = {2024},
isbn = {9798400704239},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626252.3630967},
doi = {10.1145/3626252.3630967},
abstract = {Culturally responsive computing scholars often use the metaphor and heuristic of intersectionality to address issues of race and gender in research with Black, Brown, and Indigenous children in U.S. K12 computer science (CS) education. This has led to critical analyses that reveal the inequitable conditions that children of color face in CS education. Intersectionality has also supported curricular innovations and interventions that aim to make CS education more equitable by being responsive to children's identities and communities. However, the concept of class has received less attention than race and gender by culturally responsive computing scholars who draw on intersectionality in their CS education research. How might class fit into intersectional research and theory in culturally responsive computing scholarship? The objective of this paper is to answer this question with a proof-of-concept study that tests the feasibility of what we call worker-driven computing education. We introduce findings from our research and collaborations with current, once, and retired autoworkers in Detroit, Michigan to define the computational thinking idea of automation from their perspectives. Through analyzing qualitative data, a worker-driven definition of automation was developed by drawing on autoworker-expertise about the points of production in the auto-industry. Our findings reveal how this definition focuses on introducing automation in the context of lifelong learning about how to communicate and work across divisions of labor to make workplaces safe, healthy, and efficient.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 1},
pages = {701–707},
numpages = {7},
keywords = {automation, class, culturally responsive computing, intersectionality, k12 computer science education},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3328778.3372653,
author = {Smith, Andy and Mott, Bradford and Taylor, Sandra and Hubbard Cheuoua, Aleata and Minogue, James and Oliver, Kevin and Ringstaff, Cathy},
title = {Designing Block-Based Programming Language Features to Support Upper Elementary Students in Creating Interactive Science Narratives},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3372653},
doi = {10.1145/3328778.3372653},
abstract = {Recent years have seen a growing recognition of the importance of enabling K-12 students to engage in computational thinking, particularly in elementary grades where students' dispositions toward STEM are developing. Block-based programming has emerged as an effective tool for engaging these novice learners in computational thinking. At the same time, digital storytelling has emerged as a promising avenue for creating motivating problem-solving scenarios that engage students in science investigations. Although block-based programming and digital storytelling are in many ways synergistic, there is a lingering question of how to design block-based languages at an age-appropriate level to enable effective and engaging storytelling. In this work, we review design principles from prior block-based and digital storytelling systems as well as propose the design of block-based programming language features to enable the creation of rich, interactive science narratives by upper elementary students.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {1327},
numpages = {1},
keywords = {digital storytelling, block-based programming},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3328778.3372667,
author = {Killen, Heather and Coenraad, Merijke and Cabrera, Lautaro and Mills, Kelly and Ketelhut, Diane Jass and Plane, Jan},
title = {"We'll be Scratching all the Time"},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3372667},
doi = {10.1145/3328778.3372667},
abstract = {School systems globally have begun to integrate computational thinking (CT) practices into elementary teaching and learning standards to provide young students with a comfort for and foundational understanding of computer science. This integration requires educating teachers to develop and implement CT learning opportunities. Our work contributes to best practice by exploring the role language plays in elementary teachers' discussions and development of CT-infused science lessons. To do this, we captured and analyzed the language used by elementary teachers as they spoke and wrote about CT in a multi-week professional development experience during which the teachers created and delivered CT-infused lessons to their students. We determined that teachers exhibited differing CT conceptualizations, which we categorized from broad to narrow. These differences were not, however, observed in either their spoken or written language. While there were instances of teachers using language that mirrored how the facilitators discussed CT, this use did not align with how they conceptualized CT. Our work analyzing connections between CT language use and CT conceptualization suggests that in order to understand how teachers are conceptualizing CT, professional development designers and teacher educators should focus on creating opportunities for teachers to employ CT practices in context rather than relying only on language. We feel this will support a more precise and nuanced engagement with CT.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {1281},
numpages = {1},
keywords = {teacher professional development, science inquiry, k-8, jargon, elementary education, computing across the curriculum, computational thinking terms, computational thinking},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3446871.3469782,
author = {Buddemeyer, Amanda and Hatley, Leshell and Stewart, Angela and Solyst, Jaemarie and Ogan, Amy and Walker, Erin},
title = {Agentic Engagement with a Programmable Dialog System},
year = {2021},
isbn = {9781450383264},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3446871.3469782},
doi = {10.1145/3446871.3469782},
abstract = {Dialog with a social pedagogical robot or agent is a powerful way for kids to learn [1, 5] but may limit the formation of an agentic relationship with the technology [9]. One main purpose of conversational agents is to allow the user to have a natural interaction that reduces the need to learn artificial conventions [6], but dialog systems fall short with respect to failure recovery, vocabulary diversity, remembering conversational history, and other measures [2, 3]. Further, Hill et. al. [4] found that people adapt their model of communication to match a chatbot’s in the same way they do with a child or non-native speaker. Thus, users conversing with a pedagogical agent are implicitly trained to shape their behavior to suit the technology rather than shaping the technology. For young learners, particularly among populations that have been historically excluded from technology fields, this limits agency and reinforces marginalizing power structures [9]. This project combines a conversational agent with ideas of agentic engagement to help middle-school-aged children learn computational thinking. Agentic engagement is defined as students’ constructive contribution into the flow of instruction and includes behaviors such as expressing interests, preferences, and opinions. It has been positively correlated to learning performance and motivation [7, 8]. Combined with a culturally responsive curriculum (CRC), agentic engagement may help to foster an agentic relationship with technology. Our system encourages learners to engage agentically by using programming constructs to change the agent’s vocabulary, recognizing the intent behind a user utterance (an invocation), and defining the action the agent will take to respond to an invocation. Students use computational thinking concepts such as pattern recognition, abstraction, and decomposition to convert ideas into commands for the dialog system and to understand which of their ideas can’t be programmed with the technology as presented. They learn both to personalize the system today and to see the agent as a technosocial construct that they can shape in the future.  Programming can be accomplished either using Google’s Blockly visual programming tool (https://developers.google.com/blockly) or through conversation with the agent itself. The agent is embodied as a robot character, so agent actions can be verbal, physical, or both. Through social dialog with the agent, learners reflect on how computational thinking is relevant to themselves and their communities as part of a CRC, building on the work of Stewart et. al. [10]. For example, learners may be asked to reflect on the relationship between greeting behaviors and identity. After designing a greeting interaction, learners program the dialog system to achieve the greeting. Then learners may be asked to imagine how they might hypothetically enhance the dialog system to make it even more capable of implementing their preferences. In parallel to the development of the dialog system and curriculum, we will also adapt Reeve’s agentic engagement instrument [7] for CRC. Our contributions will include this instrument, insights into the relationship between agentic engagement and an agentic relationship with technology, and insights into how a programmable dialog system impacts agentic engagement and learning computational thinking.},
booktitle = {Proceedings of the 17th ACM Conference on International Computing Education Research},
pages = {423–424},
numpages = {2},
keywords = {agency, agentic engagement, culturally responsive curriculum, dialog systems},
location = {Virtual Event, USA},
series = {ICER 2021}
}

@article{10.1145/3440953.3440957,
title = {Computing4Change selects new cohort},
year = {2020},
issue_date = {October 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {9},
number = {1},
url = {https://doi.org/10.1145/3440953.3440957},
doi = {10.1145/3440953.3440957},
abstract = {Computing4Change (C4C) is a competition for students from diverse disciplines and backgrounds to work in teams in applying data analysis and computational thinking to social challenges. Colocated with SC, C4C's new cohort will participate virtually in 2020.},
journal = {ACM SIGHPC Connect},
month = dec,
pages = {3},
numpages = {1}
}

@inproceedings{10.1145/3316480.3325513,
author = {Kitagawa, Midori and Fishwick, Paul and Kesden, Michael and Urquhart, Mary and Guadagno, Rosanna and Jin, Rong and Tran, Ngoc and Omogbehin, Erik and Prakash, Aditya and Awaraddi, Priyanka and Hale, Baily and Suura, Ken and Raj, Aniket and Stanfield, James and Vo, Henry},
title = {Scaffolded Training Environment for Physics Programming (STEPP): Modeling High School Physics using Concept Maps and State Machines},
year = {2019},
isbn = {9781450367233},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3316480.3325513},
doi = {10.1145/3316480.3325513},
abstract = {We are a year into the development of a software tool for modeling and simulation (M&amp;S) of 1D and 2D kinematics consistent with Newton's laws of motion. Our goal has been to introduce modeling and computational thinking into learning high-school physics. There are two main contributions from an M&amp;S perspective: (1) the use of conceptual modeling, and (2) the application of Finite State Machines (FSMs) to model physical behavior. Both of these techniques have been used by the M&amp;S community to model high-level "soft systems" and discrete events. However, they have not been used to teach physics and represent ways in which M&amp;S can improve physics education. We introduce the NSF-sponsored STEPP project along with its hypothesis and goals. We also describe the development of the three STEPP modules, the server architecture, the assessment plan, and the expected outcomes.},
booktitle = {Proceedings of the 2019 ACM SIGSIM Conference on Principles of Advanced Discrete Simulation},
pages = {127–136},
numpages = {10},
keywords = {computational thinking, concept maps, finite state machines, high school, human computer interaction, modeling, physics, programming, scaffolding, simulation, stem.},
location = {Chicago, IL, USA},
series = {SIGSIM-PADS '19}
}

@inproceedings{10.1145/3591139.3591155,
author = {Xu, Xiang and Liu, Rui and Chen, Qinqin and Yang, Hairu},
title = {A Digital Game-based Learning Approach to Improve Students’ Learning Performance of Senior High School Programming Courses},
year = {2023},
isbn = {9798400707506},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3591139.3591155},
doi = {10.1145/3591139.3591155},
abstract = {As an important means to improve teenagers' computational thinking, programming education has been paid more and more attention. But the traditional teaching mode of programming course is boring and abstract, which makes learners lack motivation and enthusiasm for learning. Therefore, learning methods based on digital games may be a potential optimization strategy. This paper proposes a learning method based on digital games and conducts a quasi-experimental study in a senior high school in China. The experimental group was placed in a learning method based on digital games to evaluate the effectiveness of the proposed learning method and game learning behavior, while the control group used traditional classroom teaching methods for learning. The results showed that the experimental group was better than the control group in learning experience, learning interest, collaborative learning ability and learning performance. It provides a valuable reference for Game-based programming teaching and research.Keywords: Digital game-based learning, Programming education, Teaching process},
booktitle = {Proceedings of the 2023 4th International Conference on Education Development and Studies},
pages = {23–28},
numpages = {6},
location = {Hilo, USA},
series = {ICEDS '23}
}

@article{10.1145/3132087,
author = {Denning, Peter J.},
title = {Computational design},
year = {2017},
issue_date = {August 2017},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {2017},
number = {August},
url = {https://doi.org/10.1145/3132087},
doi = {10.1145/3132087},
abstract = {Computational thinking refers to a deliberative process that finds a computational solution for a concern. Computational doing refers to use of computation and computational tools to address concerns. Computational design refers to creating new computational tools and methods that are adopted by the members of a community to address their concerns. Unfortunately, the definitions of both "thinking" and "doing" are fuzzy and have allowed misconceptions about the nature of algorithms. Fortunately, it is possible to eliminate the fuzziness in the definitions by focusing on computational design, which is at the intersection between thinking and doing. Computational design is what we are really after and would be a good substitute for computational thinking and doing.},
journal = {Ubiquity},
month = aug,
articleno = {2},
numpages = {9}
}

@inproceedings{10.1145/3605468.3609758,
author = {Nolan, Karen and Faherty, Roisin and Quille, Keith and Nolan, Keith and O'Farrell, Amanda and Becker, Brett A.},
title = {CS Outreach to Inform Secondary School Students' Perceptions of CS: Initial Findings},
year = {2023},
isbn = {9798400708510},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3605468.3609758},
doi = {10.1145/3605468.3609758},
abstract = {This study covers a three-year, longitudinal K–12 outreach initiative that promoted computer science in Ireland from 2017–2020. During the first year, 2017–2018, 2900 students participated in a pilot phase. 7320 students participated in the implementation phase throughout the course of the academic years 2018–2019 and 2019–2020 in 2018. The program consisted of a free, two-hour camp that was delivered on-site at the school and exposed children to a variety of computing topics, including addressing misconceptions about computing, learning how to code, and investigating computational thinking. Schools self-selected, and the initiative reached several schools in every county in Ireland, as well as schools with a wide range of socioeconomic backgrounds and gender diversity. The primary school students’ ages ranged from third class (7–8 years old) to sixth year (17–18 years old) at second level. This paper focuses specifically on the research data collected during the implementation phase (N=1202) from the secondary school students (12 - 18 years old) not enrolled in the formal Leaving Certificate Computer Science subject. Looking at student perceptions of Computer Science and if the outreach positively impacted those perceptions and if it built student interest in pursuing further study in Computer Science.},
booktitle = {Proceedings of the 18th WiPSCE Conference on Primary and Secondary Computing Education Research},
articleno = {13},
numpages = {6},
keywords = {Computer Science Education, Computing Camps Inclusive, Female Student, K-12, Outreach, Perceptions},
location = {Cambridge, United Kingdom},
series = {WiPSCE '23}
}

@inproceedings{10.1145/3587102.3588809,
author = {Greifenstein, Luisa and Heuer, Ute and Fraser, Gordon},
title = {Exploring Programming Task Creation of Primary School Teachers in Training},
year = {2023},
isbn = {9798400701382},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3587102.3588809},
doi = {10.1145/3587102.3588809},
abstract = {Introducing computational thinking in primary school curricula implies that teachers have to prepare appropriate lesson material. Typically this includes creating programming tasks, which may overwhelm primary school teachers with lacking programming subject knowledge. Inadequate resulting example code may negatively affect learning, and students might adopt bad programming habits or misconceptions. To avoid this problem, automated program analysis tools have the potential to help scaffolding task creation processes. For example, static program analysis tools can automatically detect both good and bad code patterns, and provide hints on improving the code. To explore how teachers generally proceed when creating programming tasks, whether tool support can help, and how it is perceived by teachers, we performed a pre-study with 26 and a main study with 59 teachers in training and the LitterBox static analysis tool for Scratch. We find that teachers in training (1) often start with brainstorming thematic ideas rather than setting learning objectives, (2) write code before the task text, (3) give more hints in their task texts and create fewer bugs when supported by LitterBox, and (4) mention both positive aspects of the tool and suggestions for improvement. These findings provide an improved understanding of how to inform teacher training with respect to support needed by teachers when creating programming tasks.},
booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 1},
pages = {471–477},
numpages = {7},
keywords = {assignments, automated feedback, block-based programming, elementary school, litterbox, preservice teacher education, scratch},
location = {Turku, Finland},
series = {ITiCSE 2023}
}

@inproceedings{10.1145/3626253.3635500,
author = {Oh, Diana Dajung and Rich, Kathryn M. and Bosch-Wilson, Kathleen L. and Cunningham, Heather L.},
title = {Motivating and Increasing the Relevance of Elementary Computer Science in Rural Communities: Exploring Elementary Teacher Perspectives in Idaho},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3635500},
doi = {10.1145/3626253.3635500},
abstract = {The Idaho Elementary Computer Science (CS) Collaborative (IECC) is a researcher-practitioner partnership dedicated to understanding how to better support the predominately rural districts in Idaho to implement elementary CS education. As part of the IECC's work, we conducted a survey of elementary teachers across the state. This poster will present our initial findings. Two of the research questions we addressed via the survey are: (1) What factors would motivate Idaho elementary teachers to pursue professional development (PD) related to CS? (2) What are elementary teachers' perceptions of the value of connecting CS education to rural community economies and industries? Descriptive analyses of 309 survey responses suggest that about three-quarters of elementary teachers reported that the following factors would be at least somewhat influential in their decisions to pursue CS PD: a K-5 computational thinking requirement, a district-wide CS planning staff, a pathway for elementary teachers to earn a certification in CS teaching, and a way to request CS PD funding. Few (9\%) Idaho elementary teachers found that the perception of a disconnect between CS education and rural community interests was a significant barrier to elementary CS education. Even so, over 70\% of them were moderately to strongly interested in mechanisms for connecting their CS education efforts to rural community industries through guest speakers and industry partnerships. The poster will discuss the implications of these and other emerging findings from the teacher survey, as well as IECC's related surveys of Idaho district superintendents and elementary school principals.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1768–1769},
numpages = {2},
keywords = {computer science education, elementary computer science, rural communities},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3328778.3366839,
author = {Ahmed, Gashawa and Nouri, Jalal and Zhang, LeChen and Nor\'{e}n, Eva},
title = {Didactic Methods of Integrating Programming in Mathematics in Primary School: Findings from a Swedish National Project},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366839},
doi = {10.1145/3328778.3366839},
abstract = {The association between mathematics and programming in an educational context is not new. Today, programming has been introduced into curricula worldwide for younger children. In the Swedish case, primary school teachers are expected to integrate programming in mathematics education from autumn 2018. However, Swedish teachers' knowledge of programming and programming didactics is limited. Meanwhile, there is little research on K-9 programming education. This has led to the dilemma that the mathematics teachers have limited support in didactic knowledge and good examples. This study reports on a teacher professional development project in programming. More specifically, teachers used Lesson Study to plan, execute, and evaluate lessons that integrated programming into various school subjects in elementary school. This study analyzed the didactic strategies developed in 10 lesson studies, as well as mapped the opportunities and challenges of pupils' learning in the mathematics subject. The result was the identification of three didactic strategies, which were analog programming, robot programming and block programming, as well as 11 didactic methods applied within these strategies. The paper contributes with examples of the didactic methods that teachers have developed and evaluated using lesson study. The paper further provides insights on how teachers can take progression into account by applying the three didactic strategies. At last but not least, the study shows a great need for teachers to develop computational thinking abilities.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {261–267},
numpages = {7},
keywords = {compulsory education, computational thinking, didactic strategies, mathematics, programming},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3408877.3439567,
author = {Bell, Amanda},
title = {Taking Up Opportunities to Learn in a Computer Science Professional Development for Middle School Teachers},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3439567},
doi = {10.1145/3408877.3439567},
abstract = {This paper reports on the first year of teacher PD from an ongoing project designing to integrate computational thinking in middle school mathematics classrooms. The analysis investigates how teachers' prior dispositions toward programming influenced their behaviors in the PD. Two case studies illustrate that teachers' engagement and learning were affected not just by our designs, but also by the knowledge and beliefs teachers brought with them.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {1338},
numpages = {1},
keywords = {case study, dispositions, professional development, teaching},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3300115.3309512,
author = {Zhang, Yuanlin and Wang, Jianlan and Bolduc, Fox and Murray, William G.},
title = {LP Based Integration of Computing and Science Education in Middle Schools},
year = {2019},
isbn = {9781450362597},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3300115.3309512},
doi = {10.1145/3300115.3309512},
abstract = {There is a consensus on integrating computing with STEM teaching in K-12. However, very little is known about the integration. In this paper, we propose a novel framework for integrating science and computational thinking teaching using Logic Programming. We then develop and implement two 8-session integration modules on chemistry and physics for 6th and 7th graders. Pre- and post- tests, class observations and interviews show the feasibility of the framework in terms of 1) development and implementation of the modules, and 2) the students' learning outcomes on science content and Computational Thinking, and their acceptance of the integration.},
booktitle = {Proceedings of the ACM Conference on Global Computing Education},
pages = {44–50},
numpages = {7},
location = {Chengdu,Sichuan, China},
series = {CompEd '19}
}

@inproceedings{10.1145/3408877.3432482,
author = {Skuratowicz, Eva and Vanderberg, Maggie and Hung, Eping E. and Krause, Gladys and Bradley, Dominique and Wilson, Joseph P.},
title = {I Felt Like We Were Actually Going Somewhere: Adapting Summer Professional Development for Elementary Teachers to a Virtual Experience During COVID-19},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3432482},
doi = {10.1145/3408877.3432482},
abstract = {In fall 2019, the National Science Foundation awarded Southern Oregon University a two-year Computer Science for All Researcher Practitioner Partnership grant focused on integrating computational thinking (CT) into the K'5 instruction of general elementary and elementary bilingual teachers. This experience report highlights the process of transitioning one essential component of the project an elementary teacher summer institute (SI) from in-person to online due to COVID-19. This report covers the approach the team took to designing the SI to work virtually, the challenges encountered, the experiences of the 15 teachers involved through observations and surveys, and the opportunities for refinement. This report will be of potential interest for other computer science (CS) education researchers who also may be working with elementary teachers to incorporate CS and CT activities into their instruction.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {739–745},
numpages = {7},
keywords = {covid-19, elementary teachers, integrating computational thinking, teacher professional development, virtual engagement},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3287324.3287368,
author = {Vogel, Sara and Hoadley, Christopher and Ascenzi-Moreno, Laura and Menken, Kate},
title = {The Role of Translanguaging in Computational Literacies: Documenting Middle School Bilinguals' Practices in Computer Science Integrated Units},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3287368},
doi = {10.1145/3287324.3287368},
abstract = {Bilingual education has described a process called translanguaging by which students use linguistic resources across and beyond multiple named languages to learn. Here, we examine how bilingual learners translanguage while learning computer science. These middle schoolers participated in a curricular intervention which infused computational thinking into their Spanish-English bilingual language arts class. Through a descriptive qualitative methodology, we document classroom moments supporting four claims: 1) students' translanguaging blurs linguistic, disciplinary, and modal boundaries, 2) computational literacies are intertwined with students' other literacies, 3) students' attitudes about language and the contexts around them play a role in their translanguaging, and 4) students translanguage to engage in specific CT practices.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {1164–1170},
numpages = {7},
keywords = {bilinguals, computational literacies, computer science for all, english language learners, middle school, translanguaging},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/3206157.3206170,
author = {Jin, Lan and Su, Ying},
title = {The Teaching Reform of Integration of Theory and Practice with Interest Leading and Ability Training},
year = {2018},
isbn = {9781450363587},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3206157.3206170},
doi = {10.1145/3206157.3206170},
abstract = {The fundamental of programming course is a professional basic course offered by institutions of higher learning, and C language is usually chosen as the programming language to help cultivate students' comprehensive quality and ability. Taking the fundamental of programming course as an example, aiming at the problems existing in traditional theory teaching and practice teaching, it proposes the theoretical teaching reform that stimulates students' interest in learning and develops the ability of computational thinking, constructs stage and hierarchical practice teaching system, improves continuously teaching methods and introduces the mobile cloud platform to assist teaching. The practice has proved that the students' comprehensive ability has been improved and the teaching effect has been achieved.},
booktitle = {Proceedings of the 2018 International Conference on Big Data and Education},
pages = {116–120},
numpages = {5},
keywords = {comprehensive ability, computational thinking, fundamental of programming, interest in learning, mobile cloud platform, practice teaching system},
location = {Honolulu, HI, USA},
series = {ICBDE '18}
}

@inproceedings{10.1145/3300115.3309527,
author = {Lytle, Nicholas and Catet\'{e}, Veronica and Dong, Yihuan and Boulden, Danielle and Akram, Bita and Houchins, Jennifer and Barnes, Tiffany and Wiebe, Eric},
title = {CEO: A Triangulated Evaluation of a Modeling-Based CT-Infused CS Activity for Non-CS Middle Grade Students},
year = {2019},
isbn = {9781450362597},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3300115.3309527},
doi = {10.1145/3300115.3309527},
abstract = {With the increased demand for introducing computational thinking (CT) in K-12 classrooms, educational researchers are developing integrated lesson plans that can teach CT fundamentals in non-computing specific classrooms. Although these lessons reach more students through the core curriculum, proper evaluation methods are needed to ensure the quality of the design and integration. As part of a research practice partnership, we work to infuse research-backed curricula into science courses. We find a three-pronged approach of evaluation can help us make better decisions on how to improve experimental curricula for active classrooms. This CEO model uses three data sources (student code traces, exit ticket responses, and field observations) as a triangulated approach that can be used to identify programming behavior among novice developers, preferred task ordering for the assignment, and scaffolding recommendations to teachers. This approach allows us to evaluate the practical implementations of our initiative and create a focused approach for designing more effective lessons.},
booktitle = {Proceedings of the ACM Conference on Global Computing Education},
pages = {58–64},
numpages = {7},
keywords = {modeling and simulation, computational thinking, assessment},
location = {Chengdu,Sichuan, China},
series = {CompEd '19}
}

@inproceedings{10.1145/3641555.3705015,
author = {Hutchins, Nicole M. and Chandler, Latoya and Lin, Yuhan and McKenna, Jason and DeFoe, Aimee and Israel, Maya},
title = {AI Literacy for Young Learners: A Co-Designed Robotics Unit for Students to Discover the World Beyond Human Senses},
year = {2025},
isbn = {9798400705328},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3641555.3705015},
doi = {10.1145/3641555.3705015},
abstract = {This demo introduces a hands-on robotics module designed to cultivate AI literacy in elementary students through computational thinking and robotics. Co-designed with 20 elementary school teachers and instructional coaches, the module helps students differentiate between artificial intelligence and human intelligence, focusing on the AI4K12 Big Idea of Perception, and specifically how our senses differ from a robot's sensors. The centerpiece of the curriculum is the "alien planet" task, where students program a robot to explore an unseen planet created by a peer, using its sensors to identify objects like "aliens" (green), "water" (blue), and "unique materials" (red). This activity not only builds critical thinking and problem-solving skills but also introduces foundational AI concepts, such as how machines perceive the world differently than humans. By connecting to other subjects like art (e.g., hue values) and linking to students' real-world experiences, the module offers a truly interdisciplinary and relevant approach to early AI education.},
booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1734},
numpages = {1},
keywords = {artificial intelligence, elementary education, robotics},
location = {Pittsburgh, PA, USA},
series = {SIGCSETS 2025}
}

@inproceedings{10.1145/3545945.3569869,
author = {Ojeda-Ramirez, Santiago and Tsan, Jennifer and Eatinger, Donna and Jacob, Sharin and Saito-Stehberger, Dana and Franklin, Diana and Warschauer, Mark},
title = {Describing Elementary Students' Spheres of Influence in Scratch 'About Me' Projects},
year = {2023},
isbn = {9781450394314},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545945.3569869},
doi = {10.1145/3545945.3569869},
abstract = {Researchers and practitioners have worked to bring computer science to all students. However, CS is still an inequitable field. When developing curricula, we must account for the importance of connecting the lives and identities of historically marginalized students with instructional materials. We examine the knowledge and experiences that elementary (age 9-10) students drew upon to implement an open-ended programming assignment about themselves. We coded the Scratch projects of 189 students to investigate what aspects of their lives students reference, and how they use various modalities in Scratch to create digital media products about themselves. In our data, we found that the most common spheres portrayed were identity, hobbies and leisure, and interests. When expressing their identities, students narrated their experiences, expressed consciousness about their skills, connected to the user via their interests, and sometimes discussed equity. Additionally, our findings add to previous literature on Scratch as an effective platform for digital media production. In particular, we found that students used dialogue, images, sound, and the title to represent their spheres of influence through programming multimedia and interactive projects. This work has implications for the development of curricula and teaching guides for upper elementary students courses on computational thinking. Spheres of influence could inform researchers on the most influential aspects of students life in a specific context, providing elements for creating culturally relevant and interest-based materials and lessons.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 1},
pages = {333–339},
numpages = {7},
keywords = {digital media, identity, k-5, scratch, spheres of influence},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3576882.3617928,
author = {Ikeda, Bryce and Hoelscher, Janine and Alterovitz, Ron and Szafir, Daniel},
title = {Guiding the Development of Undergraduate Educational Robotics},
year = {2023},
isbn = {9798400700484},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3576882.3617928},
doi = {10.1145/3576882.3617928},
abstract = {Educational robotics, in which students program a physical robot to interact with the real world, can provide tangible active learning opportunities that are often linked to increases in student computational thinking, creativity, and motivation. To date, ER has focused on the use of robots to augment learning of adjacent fields (e.g., mathematics, programming, digital media) for K--12 students. As a result, we lack ER guidelines for: (1) supporting college robotics students learning the discipline of robotics itself and (2) college robotics students, who may possess distinct abilities and needs compared to K--12 students. To address this gap, we present a semester-long exploration of a college-levelIntroduction to Robotics course. Through student feedback, we identified three themes: (1) Positive learning opportunities, (2) Dealing with uncertainty, and (3) Successful results with simple solutions. and provide guidelines for improving ER in the context of college students learning to program and debug robots for the first time. We detail these themes and provide guidelines for improving ER in the context of college students learning to program and debug robots for the first time.},
booktitle = {Proceedings of the ACM Conference on Global Computing Education Vol 1},
pages = {71–77},
numpages = {7},
keywords = {educational robotics (ER), undergraduate introduction to robotics},
location = {Hyderabad, India},
series = {CompEd 2023}
}

@inproceedings{10.1145/3545945.3569763,
author = {Charitsis, Charis and Piech, Chris and Mitchell, John C.},
title = {Detecting the Reasons for Program Decomposition in CS1 and Evaluating Their Impact},
year = {2023},
isbn = {9781450394314},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545945.3569763},
doi = {10.1145/3545945.3569763},
abstract = {Decomposition is considered one of the four cornerstones of computational thinking, which is essential to software development [36]. It requires the ability to assess a problem at a high level, develop a strategy to combat it, and then design a solution. Our study focuses on the metacognitive aspect of decomposition. We try to understand the learner's thought process and, specifically, what makes the novice programmer decide to break down a function.Researchers have studied decomposition in introductory programming courses through guided experiments, case studies, and surveys[23,37]. In this work, we follow a different, more scalable approach. We develop an automated system to analyze 45,000 code snapshots from 168 students for a challenging CS1 programming assignment, detect the pivotal moments when they decide to decompose their programs, and identify what drives their decisions from the code. We then classify the students and study the relationship between the different categories, the code complexity, and the time to derive the final solution. We evaluate the impact of decomposition on the student's performance in the assignment and the course exams. Finally, we discuss the implications of our results for computing education.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 1},
pages = {1014–1020},
numpages = {7},
keywords = {complexity, computing education, cs1, function decomposition, metacognition, program decomposition, student performance},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3502434.3502439,
author = {Xie, Songhua and Hu, Changkui and Wu, Wei and Fan, Lili and Xiong, Yao and Tao, Jun},
title = {Blended Practical Teaching of Object Oriented Programming Based on PBL and Task Driven},
year = {2022},
isbn = {9781450385749},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3502434.3502439},
doi = {10.1145/3502434.3502439},
abstract = {According to the characteristics of equal emphasis on both theoretical knowledge and practical technology, this paper discusses the reform of experiment teaching mode in object-oriented programming course. Based on the support of the China University MOOC and PTA platform for program design experiments, a blended teaching mode combined with PBL (Problem-Based Learning), flipped classroom, task driven and online evaluation OJ (Online Judgement) is designed to explore the application of the new practice teaching mode in the course. The course is aiming to develop students' computational thinking skills, which has been proved by practice that the reform has achieved good teaching results. Correspondingly, students' ability of autonomous learning, cooperation, problem solving and creativity have been simultaneously improved.},
booktitle = {Proceedings of the 2021 5th International Conference on Education and E-Learning},
pages = {125–128},
numpages = {4},
keywords = {Blended teaching, Flipped classroom, PBL, Task driven},
location = {Virtual Event, Japan},
series = {ICEEL '21}
}

@inproceedings{10.1145/3689050.3705972,
author = {Matthews, Sarah and Nicholas, Maria and Paatsch, Louise and Kervin, Lisa and Wyeth, Peta},
title = {Wobblies: Designing Intentional Playthings with Young Children},
year = {2025},
isbn = {9798400711978},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3689050.3705972},
doi = {10.1145/3689050.3705972},
abstract = {This paper analyses a novel tangible technology in early childhood environments as a boundary object. Objects in early childhood environments often share space between adults’ and children's objectives. By considering these objects as boundary objects, designers are led to explore how children appropriate objects for playful learning activities beyond adult objectives. This paper discusses Wobblies (see Figure 1), a novel technology probe, to interrogate how a socially-motivated design with conditional and positional interactive behaviour was understandable to children, and how they appropriated the probe in playful activities. We deployed the probe in a rural Australian preschool in a free-play environment. Initial observational findings show that the children understood the procedure of the interactions and moved from exploring to constructive play activities.},
booktitle = {Proceedings of the Nineteenth International Conference on Tangible, Embedded, and Embodied Interaction},
articleno = {55},
numpages = {7},
keywords = {Computational Thinking, Play, Tangible Technology, Young Children},
location = {
},
series = {TEI '25}
}

