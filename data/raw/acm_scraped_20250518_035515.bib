@inproceedings{10.1145/3545947.3576321,
author = {Popov, Aleksandr},
title = {Motivation and Practices of Teaching Computational Social Science to Undergraduate Political Science Students},
year = {2023},
isbn = {9781450394338},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545947.3576321},
doi = {10.1145/3545947.3576321},
abstract = {The introductory course in basics of programming aims to teach second-year political science students the basic skills of applied programming that are crucial for transferring their research ideas into computational models. As one of students' first interactions with computer science concepts, the course assists in overcoming their barriers in programming, and introduces them to ways of applying computational thinking. In addition, the course material can serve as a launching pad for further development in the areas of modelling social problems, its simulations and quantitative analysis. This paper presents course design considerations, shares findings in assignment design, and raises questions to consider when designing CS0 and CS1 courses for social science students.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1376},
numpages = {1},
keywords = {computational social science, teaching computational thinking},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3183440.3195062,
author = {Russo, Daniel and Missiroli, Marcello and Ciancarini, Paolo},
title = {A conceptual model for cooperative thinking},
year = {2018},
isbn = {9781450356633},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3183440.3195062},
doi = {10.1145/3183440.3195062},
abstract = {Training computer scientists to address wicked problems means to focus respectively on the individual capability to think in a computational-oriented way (i.e., Computational Thinking), and on the social dimension of coding (i.e., Agile Values). In this study we propose the conceptual model of Cooperative Thinking, a new education construct of team-based computational problem solving. Cooperative Thinking is not only the sum of Computational Thinking and Agile Values, rather it is a new overarching competence suitable to deal with complex software engineering problems. We suggest to tackle the Cooperative Thinking construct as an education goal, to train new generations of software developers to Pareto-optimize both their individual and teaming performances.},
booktitle = {Proceedings of the 40th International Conference on Software Engineering: Companion Proceeedings},
pages = {157–158},
numpages = {2},
keywords = {agile values, computational thinking, cooperative thinking},
location = {Gothenburg, Sweden},
series = {ICSE '18}
}

@article{10.1145/3702332,
author = {Geyser, Hanli},
title = {Decoloniality, Digital-coloniality and Computer Programming Education},
year = {2024},
issue_date = {December 2024},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {24},
number = {4},
url = {https://doi.org/10.1145/3702332},
doi = {10.1145/3702332},
abstract = {Like digital technologies themselves, programming education is embedded in the colonial matrix of power, and access to programming knowledge demands immersion in the epistemologies of the Global North. While there is a growing body of work exploring ways to decolonise programming education, far more needs to be done. Current research focuses on the language of instruction and contextual curricula; outward-facing engagements with decolonisation. However, to move towards digital-decoloniality involves scrutinising how programming knowledge is recontextualised within curricula. Part of the project should be equipping both educators and students with the tools to recontextualise programming itself. To dismantle the colonial logic embedded in programming education, attention must be given to the knowledge formation of the discipline to identify moments of disruption. One such moment is the difficulty students face when recontextualising their mental models of computing, from programming skills to programming concepts. This occurs at the moment of reading, tracing and writing code. Programming requires one to refocus computational thinking and engage with a specific semiotic system, translating the authors’ intention into an executable computational process. Disrupting this moment using the strategies of critical literacies opens computer programming and its resulting code to critical examination, allowing an inward-facing decolonial engagement with the discipline.},
journal = {ACM Trans. Comput. Educ.},
month = dec,
articleno = {54},
numpages = {30},
keywords = {Introductory programming education, decoloniality, digital-colonialism, digital literacy, critical literacy, language}
}

@inproceedings{10.1145/3572549.3572576,
author = {Rottenhofer, Marina and Leitner, Sandra and Emara, Mona and Sabitzer, Barbara and Rankin, Thomas},
title = {Vocabulary Acquisition through Computer Science Modeling: A Comparative Study on Visual and Textual Vocabulary Instruction},
year = {2023},
isbn = {9781450397766},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3572549.3572576},
doi = {10.1145/3572549.3572576},
abstract = {In Computer Science (CS), modeling with diagrams is a well-known practice to visualize complex software systems or database structures. However, modeling with e.g., entity-relationship diagrams or UML (Unified Modeling Language) is also helpful in other disciplines. In this research, CS models are used as a teaching and learning tool in foreign language acquisition. The field of computer science offers a variety of models that can visualize states, as well as processes and, are therefore very suitable for the different areas of language teaching (e.g., reading, writing, grammar-, or vocabulary acquisition). With CS modeling as a teaching and learning strategy, two main objectives are addressed: enhancing learning and retention and fostering computational thinking skills. This paper presents best practice examples on how to meet these two objectives as well as the results of a crossover study, where we investigated whether vocabulary acquisition is facilitated when it is thematically preorganized in class diagrams. The results illustrate that pupils who studied with the class diagram strategy had significantly higher recall performance than pupils who studied with the list of words. A qualitative analysis of the participants’ feedback after the intervention revealed decisive criteria for their preferences regarding the learning format.},
booktitle = {Proceedings of the 14th International Conference on Education Technology and Computers},
pages = {163–169},
numpages = {7},
keywords = {computational thinking, computer science-supported learning, digital education, foreign language learning, visualization},
location = {Barcelona, Spain},
series = {ICETC '22}
}

@inproceedings{10.1145/3569173.3569179,
author = {De Bruin, Lucas and Nijenhuis-Voogt, Jacqueline and Yeni, Sabiha},
title = {Integrating CT into economics: Simulating monetary policy through computer models in spreadsheets by using a Use-Modify-Create strategy},
year = {2023},
isbn = {9781450397476},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3569173.3569179},
doi = {10.1145/3569173.3569179},
abstract = {Integrating computational thinking (CT) into the learning of school subjects is receiving increased attention. Developing students’ CT skills may not only advance their digital literacy but it may deepen subject specific learning as well. It is therefore interesting to investigate the learning of CT from a multidisciplinary perspective. This study describes the design of a CT integrated lesson for economics in which computer models in spreadsheets are used to simulate monetary policy. The lesson is structured according to the Use-Modify-Create strategy. The aim of this exploratory study is to evaluate the learning outcomes of this CT integrated lesson and students’ attitudes towards such a lesson. For this purpose, students’ exit tickets, feedback forms, supervisor observations and interviews with students have been analyzed. This qualitative analysis revealed that students perceived the lesson as difficult, especially during the Modify and Create phases. In addition, the results suggest that all phases are dependent on taking enough time to finish the Use phase to get familiar with the computational steps. Several suggestions have been given to improve the lesson, for instance, to use a simpler topic of economics. Furthermore, the analysis of students’ attitudes revealed that connections to CT could be made more explicit rather than implicitly embedded in the instructional strategy.},
booktitle = {Proceedings of the 11th Computer Science Education Research Conference},
pages = {46–53},
numpages = {8},
keywords = {CT education, Use-Modify-Create, computational thinking, computer models, economics, spreadsheets},
location = {Leiden, Netherlands},
series = {CSERC '22}
}

@inproceedings{10.1145/3723498.3723848,
author = {Dobler, Tamara and Galeotti, Lorenzo and van Rozen, Riemer},
title = {LogiCraft: A Game Modification Framework for Learning Propositional Logic},
year = {2025},
isbn = {9798400718564},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3723498.3723848},
doi = {10.1145/3723498.3723848},
abstract = {Logic and formal reasoning are essential skills for programming and computer science. Still, they are challenging to teach due to their abstract nature. This paper explores how Game-Based Learning (GBL) can simplify logic concepts, making them interactive and engaging for young learners. We introduce LogiCraft, an educational framework for co-designing board games that teach propositional logic. The framework includes three illustrative tile-based board games: ¬ SCR∧ BL, Tautoblocks, and Deducto. These games teach propositional logic by merging computational thinking with hands-on gameplay. By integrating syntax and semantics in new ways, ¬ SCR∧ BL focuses on logic formulas construction and truth tables visualization, Tautoblocks introduces more advanced concepts of negation, tautology, and contradiction, and Deducto highlights translation and model-based reasoning. Playtesting sessions with students and teachers suggest that our games can enhance logic skills and promote cooperative learning. Our initial classroom results show potential for broader applications in game-based learning.},
booktitle = {Proceedings of the 20th International Conference on the Foundations of Digital Games},
articleno = {73},
numpages = {11},
keywords = {propositional logic, game-based learning, board games, education},
location = {
},
series = {FDG '25}
}

@inproceedings{10.1145/3605468.3605498,
author = {Greifenstein, Luisa and Brune, Markus and Fuchs, Tobias and Heuer, Ute and Fraser, Gordon},
title = {Impact of Hint Content on Performance and Learning: A Study with Primary School Children in a Scratch Course},
year = {2023},
isbn = {9798400708510},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3605468.3605498},
doi = {10.1145/3605468.3605498},
abstract = {The implementation of computational thinking concepts in primary school curricula usually includes programming activities. As primary school teachers often lack subject knowledge, they may struggle to help students during these programming activities. Additional support can be provided by automated program analysis, for example in terms of hints on conceptual knowledge related to bad coding patterns observed, or procedural hints on how to solve the task at hand. However, care has to be taken since these hints need to balance (1) helping students to perform a specific task successfully, while nevertheless (2) ensuring a learning effect beyond the specific task. To understand the effects of different types of hints we therefore conducted a study with 36 children aged 7–12 in 10 programming courses. After being introduced to basic programming structures in three units, the children were tasked to debug six Scratch programs using different types of hints, where we observed that procedural hints have the strongest impact on performance. In order to examine an impact on the transfer of learned knowledge, we observed the children’s difficulties during the successive fifth unit, in which they created their own projects. The results of the fifth unit show that having received a procedural hint on a specific pattern during the fourth unit leads to slightly fewer bad related code patterns but also to slightly fewer good code patterns. Considering these results together with the subjective perceptions of the children, we can derive insights into how to best support performance and learning using (automated) feedback.},
booktitle = {Proceedings of the 18th WiPSCE Conference on Primary and Secondary Computing Education Research},
articleno = {7},
numpages = {10},
keywords = {analysis tools, block-based programming feedback, bug patterns, computational thinking, elementary school},
location = {Cambridge, United Kingdom},
series = {WiPSCE '23}
}

@inproceedings{10.1145/3701268.3701273,
author = {Conway, Brian and Nolan, Keith and Quille, Keith},
title = {HCAI Block Model: A competence model for Human Centred Artificial Intelligence at K-12},
year = {2024},
isbn = {9798400711596},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3701268.3701273},
doi = {10.1145/3701268.3701273},
abstract = {Artificial Intelligence (AI) is becoming a common topic within the computing K-12 curricula worldwide. While much of the focus of research is on the use of Generative AI in and for education, AI as a core subject area is still gaining popularity, with much of this research focusing on content and tools that effectively support the teaching of AI. However, as we grow as a field, there is a need currently unmet to provide foundations (in the form of a block model as there exists for programming) to allow researchers to build strong pedagogies and methodologies from, and even a base to design activities and content. Compounding this, as ethics and its relationship to AI in the K-12 classroom grows stronger, there is a further need to provide scaffolding to educators and researchers not only on traditional AI concepts, but also on how they link with ethical knowledge, skills and dispositions. In this paper, the Human Centered Artificial Intelligence (HCAI) Block Model is developed and introduced. This is a competence-based model to guide effective teaching and learning of Human Centered Artificial Intelligence, as well as research in the K-12 space. The HCAI Block model’s foundation is developed/adapted from the programming Block model and has been adapted and developed using two lenses. The first was through the data science lens through interaction with Computational Thinking 2.0 and competency-based learning. The second lens was through a human-centred lens. The outcome was a ground-up K-12 model where traditional and technical AI concepts have been developed from the start, integrating ethical considerations and human-centred approaches.},
booktitle = {Proceedings of the 2024 Conference on Human Centred Artificial Intelligence - Education and Practice},
pages = {22–28},
numpages = {7},
keywords = {Computing Education, Machine Learning, Human-Centered AI, Block Model, Ethics, Computational Thinking 2.0},
location = {
},
series = {HCAIep '24}
}

@article{10.1145/3500918,
author = {Jacob, Sharin Rawhiya and Montoya, Jonathan and Nguyen, Ha and Richardson, Debra and Warschauer, Mark},
title = {Examining the What, Why, and How of Multilingual Student Identity Development in Computer Science},
year = {2022},
issue_date = {September 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {22},
number = {3},
url = {https://doi.org/10.1145/3500918},
doi = {10.1145/3500918},
abstract = {Developing student interest is critical to supporting student learning in computer science. Research indicates that student interest is a key predictor of persistence and achievement. While there is a growing body of work on developing computing identities for diverse students, little research focuses on early exposure to develop multilingual students’ interest in computing. These students represent one of the fastest growing populations in the US, yet they are dramatically underrepresented in computer science education. This study examines identity development of upper elementary multilingual students as they engage in a year-long computational thinking curriculum, and follows their engagement across multiple settings (i.e., school, club, home, community). Findings from pre- and post-surveys of identity showed significant differences favoring students’ experiences with computer science, their perceptions of computer science, their perceptions of themselves as computer scientists, and their family support for computer science. Findings from follow-up interviews and prior research suggest that tailored instruction provides opportunities for connections to out-of-school learning environments with friends and family that may shift students’ perceptions of their abilities to pursue computer science and persist when encountering challenges.},
journal = {ACM Trans. Comput. Educ.},
month = sep,
articleno = {29},
numpages = {33},
keywords = {Computer science, computational thinking, identity, multilingual, English learner}
}

@inproceedings{10.1145/3649409.3691089,
author = {Gupta, Anisha and Monahan, Robert and Vandenberg, Jessica and Smith, Andy and Elsayed, Rasha and Fox, Kimkinyona and Minogue, James and Oliver, Kevin and Hubbard Cheuoua, Aleata and Ringstaff, Cathy and Mott, Bradford},
title = {Leveraging Large Language Models for Automated Assessment of Elementary Students' Block-Based Narrative Programs},
year = {2024},
isbn = {9798400706042},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3649409.3691089},
doi = {10.1145/3649409.3691089},
abstract = {Recent years have seen increasing awareness of the need to engage young learners in computational thinking (CT). Integrating digital storytelling, where students create short narratives, and CT offers significant potential for promoting interdisciplinary learning for students; however, it is critical to provide both teachers and students with automated support. A promising approach for enabling support is to leverage advances in Large Language Models (LLMs), which have demonstrated considerable potential for assessing both programming and natural language artifacts. In this work, we investigate the capabilities of LLMs to automatically assess student-created block-based programs developed using a narrative-centered learning environment that engages upper elementary students (ages 9 to 11) in learning CT and physical science through the creation of interactive science narratives. Using the narrative programs created by 28 students, we explore the efficacy of LLMs to assess the programs across two dimensions.},
booktitle = {Proceedings of the 2024 on ACM Virtual Global Computing Education Conference V. 2},
pages = {318–319},
numpages = {2},
keywords = {k-12 education, natural language processing},
location = {Virtual Event, NC, USA},
series = {SIGCSE Virtual 2024}
}

@inproceedings{10.1145/3123514.3123515,
author = {Hug, Daniel and Petralito, Serge and Hauser, Sarah and Lamprou, Anna and Repenning, Alexander and Bertschinger, Didier and St\"{u}ber, Nadine and Cslovjecsek, Markus},
title = {Exploring Computational Music Thinking in a Workshop Setting with Primary and Secondary School Children},
year = {2017},
isbn = {9781450353731},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3123514.3123515},
doi = {10.1145/3123514.3123515},
abstract = {Motivated by the essential role of music in children's lives, the potential of sound as sensory modality, and the importance of teaching Computational Thinking, there is great pedagogical potential in the integration of musical and computational thinking into "Computational Music Thinking". In this paper we report a pilot study exploring research and design approaches in creating learning environments and tools, which stimulate the interest of children and adolescents for both computer science and music in a sustainable way in the context of creative, self-guided activities. For the purposes of the study, two online tools, AgentCubes online, a 3D game design environment, and Ludosonica, an interactive music composition and performance system, were employed in a series of workshops designed for primary and secondary school children. Results from the study generally confirm the pedagogical potential of Computational Music Thinking and point toward promising future research directions.},
booktitle = {Proceedings of the 12th International Audio Mostly Conference on Augmented and Participatory Sound and Music Experiences},
articleno = {21},
numpages = {8},
keywords = {Computational thinking, STEAM education, music education},
location = {London, United Kingdom},
series = {AM '17}
}

@inproceedings{10.1145/3585088.3589364,
author = {Cheng, Ruijia and Dangol, Aayushi and Ello, Frances Marie Tabio and Wang, Lingyu and Dasgupta, Sayamindu},
title = {Concepts, practices, and perspectives for developing computational data literacy: Insights from workshops with a new data programming system},
year = {2023},
isbn = {9798400701313},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3585088.3589364},
doi = {10.1145/3585088.3589364},
abstract = {In this paper, we present a new visual block-based programming system designed for children to process, analyze, and visualize data. We introduce the system and describe how it was used during a series of 7 workshops with 27 children. During the workshops, children played the role of investigators and followed a storyline as part of the system to conduct data analyses to help the story’s protagonist locate a missing family member. We present our findings as a framework of computational data literacy that builds on the dimensions of Computational Thinking proposed by Brennan and Resnick [8], with a focus on aspects that are specific to using programming for data processing, analysis, and visualization. We conclude with a series of recommendations for future designers of systems to support the development of computational data literacy.},
booktitle = {Proceedings of the 22nd Annual ACM Interaction Design and Children Conference},
pages = {100–111},
numpages = {12},
keywords = {block-based programming, data literacy, visualization},
location = {Chicago, IL, USA},
series = {IDC '23}
}

@inproceedings{10.1145/3605468.3609754,
author = {Musaeus, Line Have and Caspersen, Michael E. and Musaeus, Peter},
title = {A Template for Teaching Computational Modelling in High School},
year = {2023},
isbn = {9798400708510},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3605468.3609754},
doi = {10.1145/3605468.3609754},
abstract = {Computing education is becoming increasingly important in high schools. Computational modelling is important in computing and many sciences, but there is a lack of research on how teachers should teach computational modelling in high schools. This study was a design-based research study with 86 teachers teaching 12 different subjects at 44 Danish high schools. The study aimed to develop a template to help design and classify didactical questions on computational modelling. Teachers participated in one of two courses on computational modelling. The intervention group (Prog+) included an introduction to agent-based modelling and programming in NetLogo. The comparison group (Prog-) included a general introduction to agent-based modelling. A template consisting of 16 modelling parameters was developed with teachers. Results showed that the template was helpful for teachers to design didactical questions and for the research team to classify the taxonomical levels of these questions. A total of 51 teaching activities were developed by teachers and didactical questions were derived. The strength of this design based research study was that it included a control group and inspired teachers to design and evaluate didactical questions in computational modelling in a wide range of high school subjects. Future studies are needed to evaluate the validity of the template.},
booktitle = {Proceedings of the 18th WiPSCE Conference on Primary and Secondary Computing Education Research},
articleno = {11},
numpages = {10},
keywords = {Computational modelling, Computational thinking, Design-based research, High school education, K-12 education, Professional development},
location = {Cambridge, United Kingdom},
series = {WiPSCE '23}
}

@inproceedings{10.1145/3478432.3499233,
author = {McSkimming, Brian M. and Decker, Adrienne},
title = {Exploring Threshold Concepts for Intermediate Students},
year = {2022},
isbn = {9781450390712},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3478432.3499233},
doi = {10.1145/3478432.3499233},
abstract = {This lightning talk describes our current efforts to isolate and identify potential threshold concepts and threshold capabilities which are experienced by intermediate computer science undergraduate students. We are utilizing the theoretical framework as described by Meyer, Land, Bowden, and Baillie. Two of the key identifiable characteristics surrounding a threshold concept are (1) the transformation one undergoes as a result of incorporating the concept into their knowledge and (2) the state of uncertainty (liminality) experienced as the learner develops this understanding. As a result of this transformation and the resultant traversal of a liminal state, elements of an identity are often developed. For the computer science undergraduate, we hypothesize that advanced computational thinking skills are developed along with these transformations leading to the development of a computer scientist identity. Through identification of the threshold concepts/capabilities experienced by intermediate students the potential corollary concepts behind computational thinking may be uncovered as well. The overall project intends to integrate elements of threshold concepts, liminality, and transformative learning to produce a framework through which computational thinking can be probed and students' progression can be better assessed and supported. These efforts are only beginning - curious faculty and students are invited to attend our presentation and consider potential collaborative participation in our endeavors.},
booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
pages = {1025},
numpages = {1},
keywords = {computational thinking, intermediate students, learning theory, threshold concepts},
location = {Providence, RI, USA},
series = {SIGCSE 2022}
}

@inproceedings{10.1145/3424953.3426629,
author = {Vieira, Jos\'{e} M. F. and Zaina, Luciana A. M.},
title = {Representation, navigation and exploration: a three layered approach on learning trajectories},
year = {2020},
isbn = {9781450381727},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3424953.3426629},
doi = {10.1145/3424953.3426629},
abstract = {Learning trajectories are paths that students may follow in order to achieve their learning goals. Although the literature has addressed the subject, little has been done in the way of exploring how to visualize learning trajectories. In this paper, we present three forms of interactive learning trajectories visualizations linked to the context of computational thinking. As the interactions on visualizations involved different aspects, our proposal comprises three layers: the data representation, the reactions to the navigation and data exploration where more details of the data can be seen. Due to visualizations being tightly related to the context from which the data comes, we analyzed the data types available in Code.org, a well-known platform commonly used to teach computational thinking. To assess the three visualizations, we carried out usability and user experience evaluation with 23 Brazilian elementary schools teachers. The results revealed that the three visualizations achieved an average of 72\% of overall understanding by the audience. Besides, our findings showed the visualizations were well accepted among the participants. We also found out that the user experience reported by the participants is in some way associated with the level of understanding of the visualizations.},
booktitle = {Proceedings of the 19th Brazilian Symposium on Human Factors in Computing Systems},
articleno = {31},
numpages = {10},
keywords = {computational thinking, learning trajectories, visualizations},
location = {Diamantina, Brazil},
series = {IHC '20}
}

@article{10.5555/3606388.3606396,
author = {Azhar, Mohammad Q. and Haynes, Ada and Day, Marisa and Wissinger, Elizabeth},
title = {Implementation and Evaluation of a Virtual Hackathon in an Urban HSI Community College during COVID-19},
year = {2023},
issue_date = {April 2023},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {38},
number = {6},
issn = {1937-4771},
abstract = {This paper shares the analysis of our quantitative findings regarding the impact of a virtual informal collaborative experiential learning activity on diverse students' computational thinking, critical thinking, and self-efficacy in STEM activities. Designed as part of an ongoing National Science Foundation sponsored project to provide underrepresented minority (URM) students from underserved economic backgrounds with real-world career preparation and technical education across disciplines through collaborative project activities using cutting-edge technologies, the Hackathon for Social Good was implemented during the COVID-19 shutdowns in a New York City community college in lower Manhattan. Students worked in teams to innovate practical solutions to global problems with mentor support from both academia and the tech industry. This intervention drew 36 students from Computer Science, Business, and Sociology classes, who worked with volunteers and alumni during a full-day event in the Fall of 2021, using AI and data science to design culturally sensitive data-driven solutions for real-world problems. The tracks covered the following topics: Zero Hunger, Clean Water, and Sanitation, Green Consumption, Racial Justice, Quality Education, Good Health, and Well Being. The two main objectives of this project are as follows: (1) Design a remote interdisciplinary one-day experiential collaborative learning environment to engage URM teams of students from a community college in applying computational thinking to develop solutions for social good. (2) Conduct research on our intervention to study its effect on students' self-efficacy, as well as their knowledge of, and comfort with, computational thinking, critical thinking, problem-solving, and STEM. The evidence gathered from qualitative and quantitative data indicates that using these mechanisms to infuse CT into student learning across disciplines has several positive outcomes. Students reported increased leadership skills, comfort with teamwork, problem-solving, and critical thinking. A quantitative study specifically showed a positive impact on student confidence in their ability to do CT and improved their sense of efficacy in impacting the world outside of the hackathon.},
journal = {J. Comput. Sci. Coll.},
month = apr,
pages = {72–84},
numpages = {13}
}

@article{10.1145/3486642,
author = {Repenning, Alexander and Basawapatna, Ashok},
title = {Explicative programming},
year = {2021},
issue_date = {November 2021},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {64},
number = {11},
issn = {0001-0782},
url = {https://doi.org/10.1145/3486642},
doi = {10.1145/3486642},
abstract = {Making Computational Thinking relevant to schools.},
journal = {Commun. ACM},
month = oct,
pages = {30–33},
numpages = {4}
}

@inproceedings{10.1145/3408877.3439578,
author = {Crasto, Ethan and Mirakhur, Zitsi},
title = {Computer Science Instruction and Academic Outcomes in Other Subjects},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3439578},
doi = {10.1145/3408877.3439578},
abstract = {Participation in computer science (CS) education is growing across the K-12 spectrum. This enthusiasm for CS is driven, in part, by the belief that through CS instruction, students will learn computational thinking (CT) skills, which can also be applied to domains outside CS. We add to this literature by examining whether or not there is a relationship between receiving CS instruction and students' academic performance in non-CS subject areas. Using a fixed-effects regression methodology with course-taking records from New York City, we examine the association between CS instruction and course grades for high school students. We find small positive associations between CS instruction and end-of-year grades in English, Math, Science, and Social Studies.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {1333},
numpages = {1},
keywords = {computational thinking, computing education, k-12 course enrollment, student success},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3502718.3524790,
author = {Rachmatullah, Arif and Vandenberg, Jessica and Wiebe, Eric},
title = {Toward More Generalizable CS and CT Instruments: Examining the Interaction of Country and Gender at the Middle Grades Level},
year = {2022},
isbn = {9781450392013},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3502718.3524790},
doi = {10.1145/3502718.3524790},
abstract = {The lack of gender diversity in the computer science (CS) field and workforce is a well-documented challenge that many, but not all, countries face. Such a challenge may tie to socio-cultural issues that have impacted K-12 CS education, eventually creating a gender gap in CS performance and attitudes. The current study compared American and Indonesian middle school students' computational thinking (CT) skills and CS attitudes. Concurrently, this study also examined whether the items in the instruments we used exhibit country, gender, or prior CS experience measurement biases. A total of 592 American n = 242 and Indonesian n = 350 middle school students took a CT assessment and CS attitudes scale. Differential item functioning (DIF) was used to detect biased items, and a two-way ANOVA was utilized to examine the interaction effects of country and gender in the two constructs. The results showed some items were flagged as having country-specific DIF. The results also indicated that the American students had higher CT scores than Indonesian students. However, Indonesian students obtained higher CS attitudes scores compared to American students. Further results showed a significant gender difference in CS attitudes in the American samples; however, such a significant difference was not found in the Indonesian sample. These findings underscore the importance of a country's socio-cultural context in influencing gender diversity in the CS field.},
booktitle = {Proceedings of the 27th ACM Conference on on Innovation and Technology in Computer Science Education Vol. 1},
pages = {179–185},
numpages = {7},
keywords = {computational thinking, cs attitudes, gender, international study},
location = {Dublin, Ireland},
series = {ITiCSE '22}
}

@inproceedings{10.1145/3386527.3406747,
author = {Nandan, Vrinda and Spittlemeister, Andrew and Brubacher, Federico},
title = {Pixasso: A Development Stage-Based Learning Application for Children},
year = {2020},
isbn = {9781450379519},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3386527.3406747},
doi = {10.1145/3386527.3406747},
abstract = {This paper describes an educational tool developed to teach coding and computational thinking to children. We designed and implemented an adaptive, interactive learning game application (mobile and web) called "Pixasso". In this application, children will write a simple program to color the 'pixels' of an image. Through the game application, they will learn programming commands, sequencing and debugging. This educational application was built using prevailing research on child centered design knowledge regarding child user interface and experience and aims to help scale initiatives dedicated towards introducing children to computer science at an early age.},
booktitle = {Proceedings of the Seventh ACM Conference on Learning @ Scale},
pages = {361–364},
numpages = {4},
keywords = {coding, computational thinking, educational technology, child centered design},
location = {Virtual Event, USA},
series = {L@S '20}
}

@inproceedings{10.1145/3328778.3366906,
author = {Nanavati, Amal and Owens, Aileen and Stehlik, Mark},
title = {Pythons and Martians and Finches, Oh My! Lessons Learned from a Mandatory 8th Grade Python Class},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366906},
doi = {10.1145/3328778.3366906},
abstract = {As computing technologies continue to have a greater impact on daily life, it becomes increasingly important for the K-12 education system to prepare students for the computerized world. In this paper, we present the curriculum design, implementation, and results from a one-trimester introductory Python course that is mandatory for all 8th graders in our school district. This course is a crucial component of the K-12 computational thinking pathways we are developing at our school district, which take students from block-based programming and computational thinking (elementary school) to text-based programming and applications of computer science (high school). Our mandatory 8th grade course serves as a bridge between these two components. We present qualitative results that highlight the challenges that arose from teaching a course for all students -- not just those with a prior interest in computing -- and how the instructor overcame those challenges. We also present quantitative results that demonstrate the course's positive impact on students' attitudes towards computer science, their intent to re-engage with computer science in the future, and the gender gap with regards to confidence in computer science.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {811–817},
numpages = {7},
keywords = {computational thinking, k-12 computer science education, robotics},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3486011.3486417,
author = {Conde, Miguel \'{A}ngel and Fern\'{a}ndez, Camino and Rodr\'{\i}guez-Sedano, Francisco and Gonz\'{a}lez-Barrientos, Covadonga and Ramos, Maria and Jesus, Manuel and Gon\c{c}alves, Jos\'{e} and Reimann, Daniela and Garc\'{\i}a Pe\~{n}alvo, Francisco Jos\'{e} and Jormanainen, Ilkka},
title = {RoboSTEAM project the pilot phases},
year = {2021},
isbn = {9781450390668},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3486011.3486417},
doi = {10.1145/3486011.3486417},
abstract = {Digital society demands very qualified professionals ready to this environment challenges. This makes necessary to foster the development of competences related to such context such as Computational Thinking or STEAM related skills. However, this is not an easy task, especially because integrating subjects that covers the necessary topics and competences. New active pedagogical approaches are required and this what RoboSTEAM project provides. The application of Challenge Based Learning and Physical Devices and Robotics facilitate the so named twenty first century skills. The project has been developed by several universities and schools and one of most critical parts was testing the methodology and tools, this was done into pilot phases that are described in the present work. The results show that there are important differences between partners socioeconomical context, but that the outcomes of the project are flexible enough to be applied successfully in any of them.},
booktitle = {Ninth International Conference on Technological Ecosystems for Enhancing Multiculturality (TEEM'21)},
pages = {44–50},
numpages = {7},
keywords = {Computational Thinking, Evaluation, Physical Devices, Pilots, Robotics, STEAM},
location = {Barcelona, Spain},
series = {TEEM'21}
}

@article{10.1145/3578523,
author = {Yal\c{c}\i{}n, \"{O}zge Nilay and Lall\'{e}, S\'{e}bastien and Conati, Cristina},
title = {The Impact of Intelligent Pedagogical Agents’ Interventions on Student Behavior and Performance in Open-Ended Game Design Environments},
year = {2023},
issue_date = {September 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {13},
number = {3},
issn = {2160-6455},
url = {https://doi.org/10.1145/3578523},
doi = {10.1145/3578523},
abstract = {Research has shown that free-form Game-Design (GD) environments can be very effective in fostering Computational Thinking (CT) skills at a young age. However, some students can still need some guidance during the learning process due to the highly open-ended nature of these environments. Intelligent Pedagogical Agents (IPAs) can be used to provide personalized assistance in real-time to alleviate this challenge. This paper presents our results in evaluating such an agent deployed in a real-word free-form GD learning environment to foster CT in the early K-12 education, Unity-CT. We focus on the effect of repetition by comparing student behaviors between no intervention, 1-shot, and repeated intervention groups for two different errors that are known to be challenging in the online lessons of Unity-CT. Our findings showed that the agent was perceived very positively by the students and the repeated intervention showed promising results in terms of helping students make fewer errors and more correct behaviors, albeit only for one of the two target errors. Building from these results, we provide insights on how to provide IPA interventions in free-form GD environments.},
journal = {ACM Trans. Interact. Intell. Syst.},
month = sep,
articleno = {11},
numpages = {29},
keywords = {Pedagogical agent, real-time support, game design, computational thinking, open-ended learning environments}
}

@inproceedings{10.1145/3711403.3711485,
author = {Zhao, Wei and Nie, Zhenhua and Li, Xiaoming},
title = {Teaching Practice of C Language Programming under the Constructivist Learning Paradigm},
year = {2025},
isbn = {9798400717468},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3711403.3711485},
doi = {10.1145/3711403.3711485},
abstract = {The construction of new engineering disciplines and the “Double Tops” initiative have put forward new requirements for the training of engineering professionals. Taking the course of C language programming as an example, this paper analyzes the pain points in current course teaching, combines the characteristics of students’ learning situation, takes students as the center, and based on the knowledge graph, an effective tool for organizing resources, carries out a modular teaching practice of C language programming design under the constructivist learning paradigm. Integrating the OBE (Outcomes-Based Education) concept into teaching, it enhances students’ practical ability, cultivates their computational thinking, and highlights the training of students’ ability to analyze and solve complex engineering problems and creative thinking. The exploration and practice of this course teaching can provide reference and reference for the teaching design of other programming courses.},
booktitle = {Proceedings of the 2024 7th International Conference on Educational Technology Management},
pages = {504–508},
numpages = {5},
keywords = {Program design, constructivist learning, teaching mode, teaching reform and practice},
location = {
},
series = {ICETM '24}
}

@article{10.1145/3336126,
author = {Merkouris, Alexandros and Chorianopoulos, Konstantinos},
title = {Programming Embodied Interactions with a Remotely Controlled Educational Robot},
year = {2019},
issue_date = {December 2019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {19},
number = {4},
url = {https://doi.org/10.1145/3336126},
doi = {10.1145/3336126},
abstract = {Contemporary research has explored educational robotics, but it has not examined the development of computational thinking in the context of programming embodied interactions. Apart from the goal of the robot and how the robot will interact with its environment, another important aspect that should be taken into consideration is whether and how the user will physically interact with the robot. We recruited 36 middle school students to participate in a six-session robotics curriculum in an attempt to expand their learning in computational thinking. Participants were asked to develop interfaces for the remote control of a robot using diverse interaction styles from low-level to high-level embodiment, such as touch, speech, and hand and full-body gestures. We measured students’ perception of computing, examined their computational practices, and assessed the development of their computational thinking skills by analyzing the sophistication of the projects they created during a problem-solving task. We found that students who programmed combinations of low embodiment interfaces or interfaces with no embodiment produced more sophisticated projects and adopted more sophisticated computational practices compared to those who programmed full-body interfaces. These findings suggest that there might be a tradeoff between the appeal and the cognitive benefit of rich embodied interaction with a remotely controlled robot. In further work, educational robotics research and competitions might be complemented with a hybrid approach that blends the traditional autonomous robot movement with student enactment.},
journal = {ACM Trans. Comput. Educ.},
month = jul,
articleno = {40},
numpages = {19},
keywords = {Embodied learning, assessment, children, computational thinking, educational robotics, embodiment, human–robot interaction}
}

@inproceedings{10.1145/3626253.3635522,
author = {Ruiz, Pati and Rangel, Alessandra and Coenraad, Merijke},
title = {Using Generative AI to Support PK-12 Teaching and Learning: Developing Sample Lessons and More},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3635522},
doi = {10.1145/3626253.3635522},
abstract = {North Salem Central School District (North Salem) has worked with researchers as part of a larger Research Practice Partnership (RPP) to design and implement an inclusive PK-12 computing pathway in their district. This poster describes how teachers used Generative AI (GenAI) tools in three areas: (1) the development of sample computational thinking (CT) lesson plans; (2) initial brainstorming; and (3) professional learning.As North Salem reflected on their use of GenAI tools, they named two AI tools specifically: OpenAI's ChatGPT-4 and Bing's Image Creator. Teachers also describe ethical dilemmas that they faced when integrating GenAI tools as well as other concerns that will be described below. This work builds on the growing literature on the use of Generative AI tools to support the day-to-day work of teachers.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1800–1801},
numpages = {2},
keywords = {K-12 computer science education, ducational equity, formative assessment},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3639631.3639651,
author = {Liang, Yuan and Wang, Mei},
title = {Multiple Kernel Learning for Learner Classification},
year = {2024},
isbn = {9798400709203},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3639631.3639651},
doi = {10.1145/3639631.3639651},
abstract = {Abstract:At present, educational researchers are continuously exploring new ways of learner models. To solve the problems of data bias and feature mismatch that may occur in learner modeling on heterogeneous data, this paper uses the method of Multiple Kernel Learning (MKL) to accurately portray the features of learners' thinking skills and construct a classification model for top talents. First, by analyzing the thinking skills that have the greatest impact on top talents, the features of critical thinking skills, logical thinking skills and computational thinking skills are extracted separately. Then, a learner classification model for top talents was constructed by MKL method. Finally, the model was validated on the dataset and compared with the results of single-kernel learning. The experimental results show that the accuracy of the classification model for top talents based on MKL is significantly better than that of ordinary single-kernel learning, which indicates that the method of MKL performs better in the learner classification model.},
booktitle = {Proceedings of the 2023 6th International Conference on Algorithms, Computing and Artificial Intelligence},
pages = {113–118},
numpages = {6},
keywords = {Learner Classification, Multiple Kernel Learning, Thinking Skills, Top Talents},
location = {Sanya, China},
series = {ACAI '23}
}

@inproceedings{10.1145/3545947.3576246,
author = {Damle, Param and Bull, Glen and Watts, Jo and Nguyen, N. Rich},
title = {Automated Structural Evaluation of Block-based Coding Assignments},
year = {2023},
isbn = {9781450394338},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545947.3576246},
doi = {10.1145/3545947.3576246},
abstract = {As computer science is integrated into a wider variety of fields, block-based programming languages like Snap!, which assemble code with visual blocks rather than text syntax, are increasingly used to teach computational thinking (CT) to students from diverse backgrounds. Although automated evaluators (autograders) for programming assignments usually focus on runtime efficiency and output accuracy, effective evaluation of a student's CT skills requires assessing coding best practices, such as decomposition, abstraction, and algorithm design. While autograders are commonplace for text languages like Python, we present a machine learning approach to assess how effectively block-based code demonstrates understanding of CT fundamentals. Our dataset consists of Snap! programs written by students new to coding and evaluated by instructors using a CT rubric. We explore how to best transform these programs into low-dimensional features to allow encapsulation and repetition patterns to emerge. Experimentation involves comparing the effectiveness of a suite of clustering models and similarity metrics by analyzing how directly automated feedback correlates to the course staff's manual evaluation. Lastly, we demonstrate the practical application of the autograder in a classroom setting and discuss scalability and feasibility in other domains of CS education.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1300},
numpages = {1},
keywords = {block-based coding, clustering, computational thinking, machine learning, student assessment, visual programming},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3466725.3466767,
author = {Negrini, Lucio and Reyes Reyes Mury, Sophia and Skweres, Melissa and Kollegger, Nina},
title = {Demonstration of Roteco - the robotic teacher community: An informative, collaborative platform with a unique community ecosystem},
year = {2021},
isbn = {9781450389891},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3466725.3466767},
doi = {10.1145/3466725.3466767},
abstract = {Today the digital society in which we live requires the acquisition of new computer-related skills, such as computational thinking or coding skills, as well as cross-curricular skills, such as communication, collaboration and creativity. Preparing and inspiring educators to discover, learn and contribute to child-centered innovative ideas and emerging technologies is at the heart of our mission. Within the framework of the project, a teacher training concept, a collaboration platform and various pedagogical resources have been developed. The demonstration will present the DNA of the Roteco project, the collaborative platform and its contents and how Roteco is currently supporting its community of educators. Roteco encourages synergies with FabLearn Europe / MakeEd and in the spirit of open-ended exploration encourages the possibilities.},
booktitle = {FabLearn Europe / MakeEd 2021 - An International Conference on Computing, Design and Making in Education},
articleno = {22},
numpages = {3},
keywords = {Coding, Community, Computational thinking, Educational Robotics, FabLearn, Informatic, K-12 education, Programming, STEM education, constructivism, socio-constructivism&nbsp;},
location = {St. Gallen, Switzerland},
series = {FabLearn Europe / MakeEd 2021}
}

@inproceedings{10.1145/3328778.3366808,
author = {Salehi, Shima and Wang, Karen D. and Toorawa, Ruqayya and Wieman, Carl},
title = {Can Majoring in Computer Science Improve General Problem-solving Skills?},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366808},
doi = {10.1145/3328778.3366808},
abstract = {Teaching students to become skillful problem solvers is a goal of university education, but it has been difficult to measure such skill or demonstrate the benefits of particular educational experiences. This paper presents a study of college students solving a problem unrelated to their academic majors. The analysis suggests that the educational experiences of Computer Science (CS) students may better train them in problem-solving than the experiences of other majors. In this study, students from a variety of undergraduate majors and grade levels were given a 15-minute problem-solving task embedded in an interactive science simulation. The complex task calls upon many problem-solving practices needed by scientists and engineers in their professions. Although this task has little resemblance to the problems encountered in a computer science course, CS students performed significantly better than students in any other major. In addition, only for CS students was there an indication of improvement in problem-solving from lower to upper grade levels. We propose that general problem-solving and computational thinking share some common practices, such as problem decomposition and comprehensive data collection. Furthermore, we present preliminary evidence that training in computational thinking is transferable to problem-solving tasks across domains and discuss how the unique features of CS programming assignments could be generalized to other science and engineering courses to foster students' general problem-solving skills.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {156–161},
numpages = {6},
keywords = {computational thinking, computer science education, problem solving, simulations, student assessment},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3544548.3581035,
author = {Cen, Jingyao and Xu, Tian and Yu, Junnan},
title = {Examining Gender-oriented Design Features in Computational Toys and Kits for Young Children},
year = {2023},
isbn = {9781450394215},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3544548.3581035},
doi = {10.1145/3544548.3581035},
abstract = {Computational toys and apps, or coding kits, are the primary learning media for young children to engage in Computational Thinking concepts and skills. However, how coding kits are designed to welcome children of different genders remains unclear, a critical research gap given that computing is mostly a male-dominated field. Drawing on relevant literature, we develop a framework of gender-related design features in toys (i.e., boy-oriented, girl-oriented, or gender-neutral features) and employ it to examine gender-related design features in commercially available coding kits for young children aged seven and under (N=110). The findings reveal the lopsided gender representation in coding kits, e.g., their physical forms and supported coding activities are predominantly boy-oriented. We discuss design and research implications for coding kits to welcome participation from children of different genders, especially young girls whose preferred design features are underrepresented in current designs.},
booktitle = {Proceedings of the 2023 CHI Conference on Human Factors in Computing Systems},
articleno = {303},
numpages = {19},
keywords = {Coding kits, gendered design features, inclusiveness, young children},
location = {Hamburg, Germany},
series = {CHI '23}
}

@inproceedings{10.1145/3631802.3631835,
author = {Kunz, Katrin},
title = {Developing, Validating, and Implementing a Mental Model Test for Primary School Students (Doctoral Consortium)},
year = {2024},
isbn = {9798400716539},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3631802.3631835},
doi = {10.1145/3631802.3631835},
abstract = {This doctoral research aims to address the lack of empirical studies on identifying mental models in primary school students, particularly in relation to programming concepts such as loops and conditionals. The objective is to develop and validate a mental model test and explore its potential in enhancing programming competence. The research will employ a mixed methods approach, utilizing an online questionnaire and interviews with primary school students attending computational thinking courses. The test will be validated by subject matter experts, and its correlation with other instruments will be assessed for criterion validation. Subsequently, the validated test will be implemented within a conceptual change teaching approach to evaluate its applicability and impact through a randomized controlled field trial.},
booktitle = {Proceedings of the 23rd Koli Calling International Conference on Computing Education Research},
articleno = {30},
numpages = {2},
keywords = {mental model, mixed methods, test instrument validation},
location = {Koli, Finland},
series = {Koli Calling '23}
}

@inproceedings{10.1145/3641555.3705157,
author = {Servin, Christian and Becker, Brett A. and Garcia, Emiliano},
title = {Cultivating Sense of Belonging in Computing Education: Identifying Servingness Traits Among Community College Population},
year = {2025},
isbn = {9798400705328},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3641555.3705157},
doi = {10.1145/3641555.3705157},
abstract = {Adversarial Thinking (AT) is essential in cybersecurity, fostering strategic problem-solving by anticipating worst-case scenarios. However, its integration into early computing education, especially in the first two years, remains underexplored. Introductory courses like CS 0 build foundational skills but are challenging to implement in resource-limited community colleges. Strengthening AT in these students can enhance their workforce readiness and support transfers to four-year programs. Servingness describes how Hispanic-Serving Institutions (HSIs) go beyond merely enrolling Latinx students to address their specific cultural, academic, and social needs. It involves creating inclusive environments where students feel a strong sense of belonging, supported by culturally relevant practices, leadership opportunities, and community engagement. These environments generate feelings of being accepted, valued, and included within a community or group, also called a sense of belonging. This work presents research focused on the incorporation of AT within the first two years of computer science education at community colleges, in particular to a course CS 0. By examining the integration of AT principles in early coursework, the study identifies key characteristics and a sense of belonging that are instrumental in cultivating AT capabilities among students. The findings aim to offer actionable insights for educators in community colleges, enabling them to more effectively prepare students for the complexities of modern computing careers and to address the broader needs of the cybersecurity field. Through this targeted educational approach, students can develop a more robust understanding of adversarial strategies, enhancing their overall computational thinking and problem-solving skills.},
booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1617–1618},
numpages = {2},
keywords = {CS 1, adversarial thinking, community colleges, sense of belonging, servingness},
location = {Pittsburgh, PA, USA},
series = {SIGCSETS 2025}
}

@inproceedings{10.1145/3459990.3460711,
author = {Chakarov, Alexandra Gendreau and Bush, Jeffrey and Biddy, Quentin L and Jacobs, Jennifer and Elliott, Colin Hennessy and Sumner, Tamara},
title = {Challenges and Unexpected Affordances of Physical Computing Going Remote},
year = {2021},
isbn = {9781450384520},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3459990.3460711},
doi = {10.1145/3459990.3460711},
abstract = {Engaging in physical computing activities involving both hardware and software provides a hands-on introduction to computer science. The move to remote learning for primary and secondary schools during the 2020-2021 school year due to COVID-19 made implementing physical computing activities especially challenging. However, it is important that these activities are not simply eliminated from the curriculum. This paper explores how a unit centered around students investigating how programmable sensors that can support data-driven scientific inquiry was collaboratively adapted for remote instruction. A case study of one teacher’s experience implementing the unit with a group of middle school students (ages 11 to 14) in her STEM elective class examines how her students could still engage in computational thinking practices around data and programming. The discussion includes both the challenges and unexpected affordances of engaging in physical computing activities remotely that emerged from her implementation.},
booktitle = {Proceedings of the 20th Annual ACM Interaction Design and Children Conference},
pages = {276–282},
numpages = {7},
keywords = {Computational Thinking, Data Science, K-12 Computing Education, Physical Computing},
location = {Athens, Greece},
series = {IDC '21}
}

@inproceedings{10.1145/3291533.3291537,
author = {Merkouris, Alexandres and Chorianopoulos, Konstantinos},
title = {Programming touch and full-body interaction with a remotely controlled robot in a secondary education STEM course},
year = {2018},
isbn = {9781450366106},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3291533.3291537},
doi = {10.1145/3291533.3291537},
abstract = {Contemporary research has introduced educational robotics in the classroom, but there are few studies about the effects of alternative embodied interaction modalities on computational thinking and science education. Twenty-six middle school students were asked to program interfaces for controlling the heading and speed of a robot using two types of embodied interaction modalities. We compared touch and full-body gestures to autonomous control, which does not require any embodied interaction. We assessed the development of their computational thinking skills by analyzing the projects they created during a problem-solving task and examined their understandings of science concepts related to kinematics. We found that novice students preferred full-body interfaces, while advanced students moved to more disembodied and abstract computational thinking. These findings might be applied to focus computing and science education activities to the right age and abilities groups of students.},
booktitle = {Proceedings of the 22nd Pan-Hellenic Conference on Informatics},
pages = {225–229},
numpages = {5},
keywords = {assessment, children, computational thinking, educational robotics, embodied learning, human-robot interaction},
location = {Athens, Greece},
series = {PCI '18}
}

@inproceedings{10.1145/3408877.3432376,
author = {Parker, Miranda C. and Kao, Yvonne S. and Saito-Stehberger, Dana and Franklin, Diana and Krause, Susan and Richardson, Debra and Warschauer, Mark},
title = {Development and Preliminary Validation of the Assessment of Computing for Elementary Students (ACES)},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3432376},
doi = {10.1145/3408877.3432376},
abstract = {As reliance on technology increases in practically every aspect of life, all students deserve the opportunity to learn to think computationally from early in their educational experience. To support the kinds of computer science curriculum and instruction that makes this possible, there is an urgent need to develop and validate computational thinking (CT) assessments for elementary-aged students. We developed the Assessment of Computing for Elementary Students (ACES) to measure the CT concepts of loops and sequences for students in grades 3-5. The ACES includes block-based coding questions as well as non-programming, Bebras-style questions. We conducted cognitive interviews to understand student perspectives while taking the ACES. We piloted the assessment with 57 4th grade students who had completed a CT curriculum. Preliminary analyses indicate acceptable reliability and appropriate difficulty and discrimination among assessment items. The significance of this paper is to present a new CT measure for upper elementary students and to share its intentional development process.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {10–16},
numpages = {7},
keywords = {assessment, computational thinking, elementary education},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3649405.3659482,
author = {Maximova, Alexandra},
title = {Teaching Programming through Multi-Context Physical Computing},
year = {2024},
isbn = {9798400706035},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3649405.3659482},
doi = {10.1145/3649405.3659482},
abstract = {With the growing demand for computational skills in the job market, it's imperative that lower secondary school students grasp basic programming concepts such as repetition, modularity, conditionals, and variables. Yet, many students perceive computer science as daunting and irrelevant. Physical computing offers a promising solution to this motivational gap. It enhances intrinsic motivation, self-efficacy, and positive attitudes towards technology. Moreover, they engage students who may not identify as typical programmers and foster essential computational thinking skills.This research investigates the efficacy of employing the same educational robot in different contexts, such as music, images, colors, and simple video games, while teaching basic programming concepts. We call this approach "multi-context physical computing'' to emphasize the focus on the different application scenarios. We believe that this could benefit students for two reasons. Firstly, by presenting the same concept across different contexts, learners can better grasp the essence of the concept, disentangling it from extraneous contextual associations. Secondly, catering to individual interests by offering diverse contexts may enhance motivation, consequently fostering improved learning outcomes, as predicted by the expectancy-value theory.In order to assess the benefits of the multi-context approach on learning outcomes and motivation, we will compare it to a more traditional single-context approach centered on robot locomotion in a randomized controlled study.},
booktitle = {Proceedings of the 2024 on Innovation and Technology in Computer Science Education V. 2},
pages = {850–851},
numpages = {2},
keywords = {algorithmic thinking, educational robotics, physical computing, secondary school},
location = {Milan, Italy},
series = {ITiCSE 2024}
}

@inproceedings{10.1145/3311890.3311907,
author = {Lee, Victor R. and Vincent, Heidee},
title = {An Expansively-framed Unplugged Weaving Sequence Intended to Bear Computational Fruit of the Loom},
year = {2019},
isbn = {9781450362443},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3311890.3311907},
doi = {10.1145/3311890.3311907},
abstract = {We report on a late-breaking project that centralizes the Maker practice of loom-based weaving as a locus for unplugged computational thinking. While unplugged activities are appealing for making computation accessible, they also come with the risk of developing inert knowledge. To address and mitigate that risk, we introduce a new framework that we are developing called "Expansively-framed Unplugged" (EfU) computing education. We report on some initial testing and refinement of a learning sequence that starts with weaving on a loom and ends with optimizing code in Scratch. The testing was done with a school librarian who is will be implementing a coding program with students at a middle school library using this EfU sequence.},
booktitle = {Proceedings of FabLearn 2019},
pages = {124–127},
numpages = {4},
keywords = {Computational Thinking, Expansive Framing, Looms, Unplugged, Weaving},
location = {New York, NY, USA},
series = {FL2019}
}

@inproceedings{10.1145/3450329.3476860,
author = {Fronza, Ilenia and Corral, Luis and Iaccarino, Gennaro and Pahl, Claus},
title = {Enabling Peer-Led Coding Camps by Creating a Seed Effect in Young Students},
year = {2021},
isbn = {9781450383554},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3450329.3476860},
doi = {10.1145/3450329.3476860},
abstract = {During peer-led intensive events (such as hackathons and coding camps), students actively assist others to learn and, in turn, benefit from an effective learning environment. In this paper, we present the results of an observational study, having as a working setting a coding camp based on Computational Thinking (CT), to explore how peer-led coding camps can create a seed effect in young students. In particular, we analyze how a practical approach to convey CT skills motivates and effectively prepares student tutors. Moreover, we compare the previous and next edition of the camp to identify the specific contribution of the tutors. We observed that students benefit in particular from CT perspectives and develop the necessary motivation to eventually serve as tutors, creating a multiplier effect that benefits a larger number of students of future cohorts. Moreover, our results show that student tutors contributed positively to the facilitation of the subsequent edition of the coding camp.},
booktitle = {Proceedings of the 22nd Annual Conference on Information Technology Education},
pages = {117–122},
numpages = {6},
keywords = {coding camp, computational thinking, peer-assisted learning},
location = {SnowBird, UT, USA},
series = {SIGITE '21}
}

@inproceedings{10.1145/3291279.3341207,
author = {Milgram, Aaron and Jain, Shruti and Ichinco, Michelle},
title = {Identifying Learning Trajectories in Self-Directed Programming},
year = {2019},
isbn = {9781450361859},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3291279.3341207},
doi = {10.1145/3291279.3341207},
abstract = {Many children begin to learn to code in a self-directed context, such as by creating an animation, game or phone app. Recent research has begun to investigate and evaluate the results of this process: children's projects. However, little is known about the different trajectories novices have during the long-term process of self-directed programming learning. Our aim is to identify the existing types of trajectories and be able to determine a specific child's trajectory. If that trajectory does not lead to significant progress or continued motivation, we might be able to nudge them toward a different trajectory.We hypothesized that there may be several main types of trajectories. To explore this, we clustered children's programming progression in order to identify trends. We used a data set of Scratch programs for its large sample size and diverse population [1,3]. We used Dr. Scratch's scoring of computational thinking skills as our initial feature set [2]. Our clustering analysis identified two main groups of users. The first group, 55.8\% of users, generally progressed upward over time in their computational thinking skill score. The second group, 44.2\% of users, showed little to no improvement over time.These preliminary results raise many questions about these two high-level groupings of trajectories of computational thinking skill demonstration in Scratch projects. In the future we want to further explore the trajectory clusters and what they could mean for supporting self-directed learning of programming.},
booktitle = {Proceedings of the 2019 ACM Conference on International Computing Education Research},
pages = {311},
numpages = {1},
keywords = {coding, computational thinking, novice programming, programming progression, self-directed learning, time-series clustering},
location = {Toronto ON, Canada},
series = {ICER '19}
}

@inproceedings{10.1145/3664934.3664940,
author = {Ponticorvo, Michela and Dell'Aquila, Elena},
title = {Robots at schools: telerobotics, coding and teaching embodied artificial intelligence},
year = {2024},
isbn = {9798400716409},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3664934.3664940},
doi = {10.1145/3664934.3664940},
abstract = {Robots have entered schools and are currently used to achieve different educational goals, as supporting computational thinking, and improving interaction between peers. In this paper we describe 3 uses of robots at schools from European projects practice: we start from telerobotics, where robots are used to support interaction at distance, if students cannot attend lesson. The second example describes how to build an educational pathway with robots to favor inclusion. Then we describe how to use robotics to introduce young students to Embodied Artificial Intelligence. These examples show that robots can be a flexible and effective tool in education as they exploit embodiment.},
booktitle = {Proceedings of the 2024 9th International Conference on Information and Education Innovations},
pages = {1–6},
numpages = {6},
location = {Verbania, Italy},
series = {ICIEI '24}
}

@inproceedings{10.1145/3706598.3713969,
author = {Choi, Yubin and Choi, Jeanne and Seering, Joseph},
title = {Leveling Up Together: Fostering Positive Growth and Safe Online Spaces for Teen Roblox Developers},
year = {2025},
isbn = {9798400713941},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3706598.3713969},
doi = {10.1145/3706598.3713969},
abstract = {Creating games together is both a playful and effective way to develop skills in computational thinking, collaboration, and more. However, game development can be challenging for younger developers who lack formal training. While teenage developers frequently turn to online communities for peer support, their experiences may vary. To better understand the benefits and challenges teens face within online developer communities, we conducted interviews with 18 teenagers who created games or elements in Roblox and received peer support from one or more online Roblox developer communities. Our findings show that developer communities provide teens with valuable resources for technical, social, and career growth. However, teenagers also struggle with inter-user conflicts and a lack of community structure, leading to difficulties in handling complex issues that may arise, such as financial scams. Based on these insights, we propose takeaways for creating positive and safe online spaces for teenage game creators.},
booktitle = {Proceedings of the 2025 CHI Conference on Human Factors in Computing Systems},
articleno = {691},
numpages = {18},
keywords = {Teenagers, youth, developing games, developer communities, online communities, safety, Roblox},
location = {
},
series = {CHI '25}
}

@inproceedings{10.1145/3364510.3364526,
author = {Liebe, Christine and Camp, Tracy},
title = {An Examination of Abstraction in K-12 Computer Science Education},
year = {2019},
isbn = {9781450377157},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3364510.3364526},
doi = {10.1145/3364510.3364526},
abstract = {Computer scientists have been working towards a common definition of abstraction; however, the instruction and assessment of abstraction remain categorically under-researched. Abstraction is often cited as a component of computational thinking and can be likened to a higher order thinking skill. Most K-12 educators have studied critical thinking (e.g., Bloom's taxonomy, Marzano \&amp; Kendall's new taxonomy) more than computational thinking. Overlapping characteristics of abstraction and critical thinking can provide educators with instructional guidance. The qualitative examination of how teachers determine curriculum, deliver instruction, and design assessments in K-12 computer science education contributes insights into current instructional practices and variables for future quantitative study. The instructional strategies, objectives, and assessments of 12 K-12 computer science teachers from three states in the United States were examined in this descriptive qualitative examination of instruction using thematic coding analysis. The majority of teachers interviewed had little to no professional development regarding teaching abstraction. All teachers in the study were unsure what student abstraction abilities should be according to grade level. Teachers' understanding of abstraction ranged from very little knowledge to very knowledgeable. The majority of teachers interviewed did not assess abstraction intentionally. Teachers described successfully teaching abstraction through multiple instructional practices and spiraling curriculum. This examination of abstraction in K-12 computer science education offers practical descriptive insights and illuminates additional variables for researching the instruction of abstraction qualitatively and quantitatively. Anecdotal instructional successes are included in the results.},
booktitle = {Proceedings of the 19th Koli Calling International Conference on Computing Education Research},
articleno = {9},
numpages = {9},
keywords = {abstraction, computational thinking, curriculum, instruction},
location = {Koli, Finland},
series = {Koli Calling '19}
}

@inproceedings{10.1145/3501712.3535291,
author = {Guler, Sibel Deren and Sotelo, Sheryl and Iwabuchi, Masa},
title = {Tekniverse: Towards a connected future for sensors, education, and action: Fostering Environmental Literacy with IoT and Physical Computing},
year = {2022},
isbn = {9781450391979},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3501712.3535291},
doi = {10.1145/3501712.3535291},
abstract = {The Internet of Things (IoT) is an innovation that is rapidly transforming industries from agriculture to medicine, enabling advances such as real-time data monitoring and remote control. However, IoT's infiltration into education has been much slower, and educational tools that embody these features are few and far between. Together with the Chugach School District in Alaska, we investigated methods to teach middle-school aged students how to use IoT to drive change in their communities and collaborate in a digital world, tied to real time environmental data. The objective of this work is to provide rural, K-12 Alaskan students and teachers with opportunities that will help build an understanding of what is happening in their local environments, increase overall scientific and climate literacy, and contribute to community resilience and connectedness. Rural Alaskan students live in some of the most vulnerable regions of the planet, regions that are highly susceptible to the impacts of climate change. In this work-in-progress paper, we first discuss the design and adaptation of Tekniverse, a hardware and software ecosystem that provides a gateway for students to code and connect hardware projects and data. We then discuss the finding of our initial study of Tekniverse as a learning tool for computational thinking, data analysis, and social responsibility in rural and remote areas with students in Alaska. Lastly, we propose future directions for this research and computational collaborative tools.},
booktitle = {Proceedings of the 21st Annual ACM Interaction Design and Children Conference},
pages = {583–589},
numpages = {7},
keywords = {Computational Thinking, IoT Environmental Literacy, Physical Computing},
location = {Braga, Portugal},
series = {IDC '22}
}

@inproceedings{10.1145/3459990.3460699,
author = {Rocha, Filipa and Pires, Ana Cristina and Neto, Isabel and Nicolau, Hugo and Guerreiro, Tiago},
title = {Accembly at Home: Accessible Spatial Programming for Children with Visual Impairments and their Families},
year = {2021},
isbn = {9781450384520},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3459990.3460699},
doi = {10.1145/3459990.3460699},
abstract = {Accessible introductory programming environments are scarce, and their study within ecological settings (e.g., at home) is almost non-existent. We present ACCembly, an accessible block-based environment that enables children with visual impairments to perform spatial programming activities. ACCembly allows children to assemble tangible blocks to program a multimodal robot. We evaluated this approach with seven families that used the system autonomously at home. Results showed that both the children and family members learned from what was an inclusive and engaging experience. Children leveraged fundamental computational thinking concepts to solve spatial programming challenges; parents took different roles as mediators, some actively teaching and scaffolding, others learning together with their child. We contribute with an environment that enables children with visual impairments to engage in spatial programming activities, an analysis of parent-child interactions, and reflections on inclusive programming environments within a shared family experience.},
booktitle = {Proceedings of the 20th Annual ACM Interaction Design and Children Conference},
pages = {100–111},
numpages = {12},
keywords = {Accessible, Children, Collaboration, Computational thinking, Robot, Tangible, Visually impaired},
location = {Athens, Greece},
series = {IDC '21}
}

@inproceedings{10.1145/3368308.3415376,
author = {Maiorana, Francesco and Csizmadia, Andrew P. and Richards, Gretchen M.},
title = {P12 Computing in Italy, England and Alabama, USA},
year = {2020},
isbn = {9781450370455},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3368308.3415376},
doi = {10.1145/3368308.3415376},
abstract = {It is recognized that Computing requires many competencies covering a wide range of domains exhibiting an impressive changing rate. This paper examines three primary competencies, which are: 1) Algorithms, Programming, Data, and Computational Thinking (CT); 2) Networks, Internet and Security; and 3) Ethics. Due to the standards and relationship of competences, the authors categorized, algorithms, programming, data and CT together. Thus, we leveraged national guidelines in Italy, mandatory national computing curriculum in England, and state guidelines in Alabama, USA in conjunction with ACM computing frameworks. The primary lessons learned from comparing computing curricula, and implications for implementing computing education curriculum are discussed.},
booktitle = {Proceedings of the 21st Annual Conference on Information Technology Education},
pages = {242–247},
numpages = {6},
keywords = {algorithms, computational thinking, data, ethics, internet, networking, programming, security},
location = {Virtual Event, USA},
series = {SIGITE '20}
}

@inproceedings{10.1145/3545947.3573341,
author = {Silvia, Devin W. and Caballero, Marcos D. and Finzell, Thomas and Frisbie, Rachel and Hamerski, Patti and Bolger, Emily and Castle, Sarah and Roca, Rachel and Tourangeau, Paige},
title = {Computing in Support of Disciplinary Learning},
year = {2023},
isbn = {9781450394338},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545947.3573341},
doi = {10.1145/3545947.3573341},
abstract = {Few would argue that modern careers across a wide range of disciplines can be performed in the absence of computing in one form or another. As such, it is becoming increasingly important for our education system to appropriately prepare students for the modern world by integrating computing and computational thinking into how students learn disciplinary content (i.e. disciplines outside of computer science). However, how to best perform this integration is not yet known, nor is there likely to be one ''best'' method. In this session, we will facilitate a discussion of the variety of ways in which post-secondary institutions are actively using computing to support disciplinary learning by highlighting examples while also considering mechanisms not yet explored. We invite anyone who wants to learn more about current efforts, share their own experiences, and contribute ideas for future endeavors. In an effort to maximize the diversity of perspectives in this discussion, we've included discussion leaders who span a variety of roles within curriculum development and classroom instruction and encourage participants from all levels and backgrounds.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1247},
numpages = {1},
keywords = {computational literacy, computational thinking, computing education, curriculum design, disciplinary education},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3687311.3687374,
author = {Lv, Cheng},
title = {Course construction based on FD-QM standards and analysis and mining of course data},
year = {2024},
isbn = {9798400709920},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3687311.3687374},
doi = {10.1145/3687311.3687374},
abstract = {In response to the shortcomings of the SPOC course "Introduction to Computational Thinking" at Beijing University of Civil Engineering and Architecture, the teaching team has transformed and improved the course design and practice based on the existing High quality undergraduate courses in Beijing universities and Beijing Curriculum Ideological and Political Demonstration Course. We aim to maintain consistency and linkage in learning objectives, learning assessments, teaching materials, learning activities, and course technology under the principle of consistent construction. Learning objectives are clearer and more measurable; learning assessment is more scientific, diverse, and reliable; Curriculum resources can meet the needs of students at different levels and majors; learning activities can fully mobilize students' subjective initiative; Curriculum technology helps to achieve learning objectives, and can reflect the characteristics of the discipline, with universality and progressiveness. Through the construction and practice of the FD-QM standard, the course team has established the principles of course standardization, clarified the direction of course material construction, drawn a knowledge graph of course knowledge points, accurately grasped the degree of learning objectives, upgraded the "characteristic" teaching resource library, enhanced student interest, and integrated ideological and political education into the curriculum, ultimately achieving a comprehensive improvement in the quality of course teaching.},
booktitle = {Proceedings of the 2024 International Conference on Intelligent Education and Computer Technology},
pages = {348–355},
numpages = {8},
location = {Guilin, China},
series = {IECT '24}
}

@inproceedings{10.1145/3501385.3543979,
author = {Parker, Miranda C. and Garcia, Leiny and Kao, Yvonne S. and Franklin, Diana and Krause, Susan and Warschauer, Mark},
title = {A Pair of ACES: An Analysis of Isomorphic Questions on an Elementary Computing Assessment},
year = {2022},
isbn = {9781450391948},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3501385.3543979},
doi = {10.1145/3501385.3543979},
abstract = {Background and Context. With increasing efforts to bring computing education opportunities into elementary schools, there is a growing need for assessments, with arguments for validity, to support research evaluation at these grade levels. After successfully piloting a 10-question computational thinking assessment (Assessment of Computing for Elementary Students – ACES) for 4th graders in Spring 2020, we used our analyses of item difficulty and discrimination to iterate on the assessment. Objectives. To increase the number of potential items for ACES, we created isomorphic versions of existing questions. The nature of the changes varied from incidental changes that we did not believe would impact student performance to more radical changes that seemed likely to influence question difficulty. We sought to understand the impact of these changes on student performance. Method. Using these isomorphic questions, we created two versions of our assessment and piloted them in Spring 2021 with 235 upper-elementary (4th grade) students. We analyzed the reliability of the assessments using Cronbach’s alpha. We used Chi-squared tests to analyze questions that were identical across the two assessments to form a baseline of comparison and then ran Chi-Squared and Kruskal-Wallis H tests to analyze the differences between the isomorphic copies of the questions. Findings. Both assessment versions demonstrated good reliability, with identical Cronbach’s alphas of 0.868. We found statistically similar performance on the identical questions between our two groups of students, allowing us to compare their performance on the isomorphic questions. Students performed differently on the isomorphic questions, indicating the changes to the questions had a differential impact on student performance. Implications. This paper builds on existing work by presenting methods for creating isomorphic questions. We provide valuable lessons learned, both on those methods and on the impact of specific types of changes on student performance.},
booktitle = {Proceedings of the 2022 ACM Conference on International Computing Education Research - Volume 1},
pages = {2–14},
numpages = {13},
keywords = {assessment, computational thinking, elementary education},
location = {Lugano and Virtual Event, Switzerland},
series = {ICER '22}
}

@inproceedings{10.1145/3372782.3407116,
author = {Salac, Jean},
title = {Diagramming as a Strategy for Primary/Elementary-Age Program Comprehension},
year = {2020},
isbn = {9781450370929},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3372782.3407116},
doi = {10.1145/3372782.3407116},
abstract = {Worldwide, many countries are implementing Computer Science (CS) and Computational Thinking (CT) instruction at the primary and secondary school level. This push for CS/CT instruction in younger ages increases the need for pedagogical practices, such as learning strategies, that are effective for a wide array of learners. However, research into strategies for young learners is relatively sparse, especially compared with strategies at the university level. This study aims to investigate a commonly used practice at the university level, diagramming, as a potential strategy for students in grades 4-8 (ages 10-15). Our hope is that diagramming can be added to a suite of strategies to support program comprehension in younger learners.},
booktitle = {Proceedings of the 2020 ACM Conference on International Computing Education Research},
pages = {322–323},
numpages = {2},
keywords = {computational thinking, diagrams, learning strategy, primary/elementary education, program comprehension},
location = {Virtual Event, New Zealand},
series = {ICER '20}
}

